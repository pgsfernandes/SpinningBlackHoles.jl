(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    222049,       4691]
NotebookOptionsPosition[    220542,       4656]
NotebookOutlinePosition[    220959,       4673]
CellTagsIndexPosition[    220916,       4670]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Functions To Print", "Title",
 CellChangeTimes->{{3.860072879034301*^9, 
  3.860072881937711*^9}},ExpressionUUID->"57c55c77-4595-43b0-ad86-\
3464955c1732"],

Cell[CellGroupData[{

Cell["Function to Print Residual + Jacobian to Julia", "Section",
 CellChangeTimes->{{3.868964767727127*^9, 
  3.868964812871311*^9}},ExpressionUUID->"757d2ab6-5efb-4cd7-b0ae-\
36103cd99711"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Function", " ", "to", " ", "write", " ", "the", " ", "field", " ", 
     "equations", " ", "and", " ", "the", " ", "jacobian", " ", "to", " ", 
     "a", " ", "Julia", " ", 
     RowBox[{"file", ".", " ", "It"}], " ", "envolves", " ", "a", " ", "lot", 
     " ", "of", " ", "string", " ", "parsing"}], ",", " ", 
    RowBox[{
    "and", " ", "will", " ", "have", " ", "to", " ", "be", " ", "edited", " ",
      "to", " ", "implement", " ", "new", " ", 
     RowBox[{"models", ".", " ", "The"}], " ", "editing", " ", "is", " ", 
     "straightforward", " ", "once", " ", 
     RowBox[{"familiar", ".", " ", "To"}], " ", "get", " ", "familiar", " ", 
     "compare", " ", "the", " ", "file", " ", "with", " ", "the", " ", "sGB", 
     " ", "field", " ", "equations", " ", "with", " ", "this", " ", "code", 
     " ", "that", " ", "was", " ", "used", " ", "to", " ", "generate", " ", 
     RowBox[{"it", ".", " ", "If"}], " ", "you", " ", "do", " ", "not", " ", 
     "want", " ", "to", " ", "use", " ", "this", " ", "file", " ", "to", " ", 
     "generate", " ", "the", " ", "field", " ", "equations", " ", "and", " ", 
     "jacobian"}], ",", " ", 
    RowBox[{
    "you", " ", "are", " ", "free", " ", "to", " ", "do", " ", "so", " ", 
     "by", " ", "editing", " ", 
     RowBox[{"sGB_System", ".", "jl"}], " ", "file", " ", "in", " ", "the", 
     " ", "appropriate", " ", 
     RowBox[{"places", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PrintToJulia", "[", 
     RowBox[{
     "name_", ",", "dfeqs_", ",", "bcH_", ",", "bcI_", ",", "bcHspin_", ",", 
      "bcIspin_", ",", "vars_", ",", "params_", ",", "Funcs_", ",", 
      "rules_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "file", ",", "it", ",", "aux", ",", "subfeqs", ",", "jacsimpl", ",", 
        "it2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"SetDirectory", "[", 
        RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"file", "=", 
        RowBox[{"OpenWrite", "[", 
         RowBox[{"name", ",", 
          RowBox[{"PageWidth", "->", "Infinity"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<#DEFINE RESOLUTION IN x\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<global const Nx=40\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<#DEFINE RESOLUTION IN y\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<global const Ny=8\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<include(\\\"../../src/SpinningBlackHoles.jl\\\")\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<using .SpinningBlackHoles, NLsolve, DelimitedFiles, Cubature\\n\
\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", 
         RowBox[{"\"\<global const NFields=\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"Length", "[", "vars", "]"}], "]"}], "<>", 
          "\"\<\\n\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"BC", " ", "HORIZON"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<#DEFINE BOUNDARY CONDITIONS AT THE HORIZON\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", "\"\<function BC_Horizon!(i::Int64,j::Int64\>\""}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dxdy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,R::Matrix{Float64},idx::Int64\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<)\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "bcH", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<    R[idx+\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"it", "-", "1"}], "]"}], "<>", "\"\<] = \>\""}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Put", "[", 
           RowBox[{
            RowBox[{"bcH", "[", 
             RowBox[{"[", "it", "]"}], "]"}], ",", "name"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<#DEFINE BOUNDARY CONDITIONS AT THE HORIZON - SPIN AS INPUT \
PARAMETER\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", "\"\<function BC_Horizon_Spin!(i::Int64,j::Int64\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dxdy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,R::Matrix{Float64},idx::Int64\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<)\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "bcH", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<    R[idx+\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"it", "-", "1"}], "]"}], "<>", "\"\<] = \>\""}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Put", "[", 
           RowBox[{
            RowBox[{"bcHspin", "[", 
             RowBox[{"[", "it", "]"}], "]"}], ",", "name"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"BC", " ", "INFINITY"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<#DEFINE BOUNDARY CONDITIONS AT THE INFINITY\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", "\"\<function BC_Infinity!(i::Int64,j::Int64\>\""}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dxdy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,R::Matrix{Float64},idx::Int64\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<)\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "bcI", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<    R[idx+\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"it", "-", "1"}], "]"}], "<>", "\"\<] = \>\""}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Put", "[", 
           RowBox[{
            RowBox[{"bcI", "[", 
             RowBox[{"[", "it", "]"}], "]"}], ",", "name"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<#DEFINE BOUNDARY CONDITIONS AT THE INFINITY - SPIN AS INPUT \
PARAMETER\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", "\"\<function BC_Infinity_Spin!(i::Int64,j::Int64\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dxdy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,R::Matrix{Float64},idx::Int64\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<)\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "bcI", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<    R[idx+\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"it", "-", "1"}], "]"}], "<>", "\"\<] = \>\""}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Put", "[", 
           RowBox[{
            RowBox[{"bcIspin", "[", 
             RowBox[{"[", "it", "]"}], "]"}], ",", "name"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"FIELD", " ", "EQS"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<#DEFINE THE FIELD EQUATIONS\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", "\"\<function Field_Eqs!(i::Int64,j::Int64\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dxdy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,haxis::Float64\>\""}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,siny::Float64\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,cosy::Float64\>\""}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "Funcs", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d0\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d1\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d3\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,R::Matrix{Float64},idx::Int64\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,x::Float64,y::Float64)\\n\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "dfeqs", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"it", "==", 
             RowBox[{"Length", "[", "dfeqs", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"WriteString", "[", 
               RowBox[{"file", ",", "\"\<    if j==2\\n\>\""}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"WriteString", "[", 
               RowBox[{"file", ",", 
                RowBox[{"\"\<        R[idx+\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"it", "-", "1"}], "]"}], "<>", 
                 "\"\<] = haxis-1\\n\>\""}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"WriteString", "[", 
               RowBox[{"file", ",", "\"\<    else\\n\>\""}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"WriteString", "[", 
               RowBox[{"file", ",", 
                RowBox[{"\"\<        R[idx+\>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"it", "-", "1"}], "]"}], "<>", "\"\<] = \>\""}]}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Put", "[", 
               RowBox[{
                RowBox[{"dfeqs", "[", 
                 RowBox[{"[", "it", "]"}], "]"}], ",", "name"}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"WriteString", "[", 
               RowBox[{"file", ",", "\"\<    end\\n\>\""}], "]"}], ";"}], 
             ";"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"WriteString", "[", 
              RowBox[{"file", ",", 
               RowBox[{"\"\<    R[idx+\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"it", "-", "1"}], "]"}], "<>", "\"\<] = \>\""}]}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"Put", "[", 
              RowBox[{
               RowBox[{"dfeqs", "[", 
                RowBox[{"[", "it", "]"}], "]"}], ",", "name"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"WriteString", "[", 
              RowBox[{"file", ",", "\"\<\\n\>\""}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"**", "**", "**", "**", "**", "**"}], "******)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"JACOBIAN", " ", "FUNCTIONS"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"BC", " ", "HORIZON"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<#DEFINE BOUNDARY CONDITIONS AT THE HORIZON\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", "\"\<function BC_Horizon_Jac!(i::Int64,j::Int64\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dxdy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,J::Matrix{Float64},idx::Int64\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", 
         "\"\<,v::Int64,funcidx::Int64,type::Int8,ordx::Int64,ordy::Int64,Mx::\
Array{Float64, 3}=Mx,My::Array{Float64, 4}=My)\\n\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it2", "=", "1"}], ",", 
         RowBox[{"it2", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it2", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<    if funcidx==\>\"", "<>", 
             RowBox[{"ToString", "[", "it2", "]"}], "<>", "\"\<\\n\>\""}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"it", "=", "1"}], ",", 
            RowBox[{"it", "<=", 
             RowBox[{"Length", "[", "bcH", "]"}]}], ",", 
            RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"WriteString", "[", 
              RowBox[{"file", ",", 
               RowBox[{"\"\<        J[v, idx+\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"it", "-", "1"}], "]"}], "<>", "\"\<] = \>\""}]}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"jacsimpl", "=", 
              RowBox[{"Simplify", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcH", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], "[", 
                    RowBox[{"x", ",", " ", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcH", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcH", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"2", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"3", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcH", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcH", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "2"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"3", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcH", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Put", "[", 
              RowBox[{"jacsimpl", ",", "name"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", "\"\<    end\\n\>\""}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", 
        "\"\<function BC_Horizon_Jac_Spin!(i::Int64,j::Int64\>\""}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dxdy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,J::Matrix{Float64},idx::Int64\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", 
         "\"\<,v::Int64,funcidx::Int64,type::Int8,ordx::Int64,ordy::Int64,Mx::\
Array{Float64, 3}=Mx,Cy::Array{Float64, 4}=My)\\n\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it2", "=", "1"}], ",", 
         RowBox[{"it2", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it2", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<    if funcidx==\>\"", "<>", 
             RowBox[{"ToString", "[", "it2", "]"}], "<>", "\"\<\\n\>\""}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"it", "=", "1"}], ",", 
            RowBox[{"it", "<=", 
             RowBox[{"Length", "[", "bcHspin", "]"}]}], ",", 
            RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"WriteString", "[", 
              RowBox[{"file", ",", 
               RowBox[{"\"\<        J[v, idx+\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"it", "-", "1"}], "]"}], "<>", "\"\<] = \>\""}]}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"jacsimpl", "=", 
              RowBox[{"Simplify", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcHspin", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], "[", 
                    RowBox[{"x", ",", " ", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcHspin", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcHspin", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"2", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"3", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcHspin", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcHspin", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "2"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"3", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcHspin", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Put", "[", 
              RowBox[{"jacsimpl", ",", "name"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", "\"\<    end\\n\>\""}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"BC", " ", "INFINITY"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<#DEFINE BOUNDARY CONDITIONS AT THE INFINITY\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", "\"\<function BC_Infinity_Jac!(i::Int64,j::Int64\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dxdy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,J::Matrix{Float64},idx::Int64\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", 
         "\"\<,v::Int64,funcidx::Int64,type::Int8,ordx::Int64,ordy::Int64,Mx::\
Array{Float64, 3}=Mx,My::Array{Float64, 4}=My)\\n\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it2", "=", "1"}], ",", 
         RowBox[{"it2", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it2", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<    if funcidx==\>\"", "<>", 
             RowBox[{"ToString", "[", "it2", "]"}], "<>", "\"\<\\n\>\""}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"it", "=", "1"}], ",", 
            RowBox[{"it", "<=", 
             RowBox[{"Length", "[", "bcI", "]"}]}], ",", 
            RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"WriteString", "[", 
              RowBox[{"file", ",", 
               RowBox[{"\"\<        J[v, idx+\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"it", "-", "1"}], "]"}], "<>", "\"\<] = \>\""}]}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"jacsimpl", "=", 
              RowBox[{"Simplify", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcI", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], "[", 
                    RowBox[{"x", ",", " ", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcI", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcI", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"2", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"3", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcI", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcI", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "2"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"3", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcI", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Put", "[", 
              RowBox[{"jacsimpl", ",", "name"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", "\"\<    end\\n\>\""}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", 
        "\"\<function BC_Infinity_Jac_Spin!(i::Int64,j::Int64\>\""}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dxdy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,J::Matrix{Float64},idx::Int64\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", 
         "\"\<,v::Int64,funcidx::Int64,type::Int8,ordx::Int64,ordy::Int64,Mx::\
Array{Float64, 3}=Mx,My::Array{Float64, 4}=My)\\n\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it2", "=", "1"}], ",", 
         RowBox[{"it2", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it2", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<    if funcidx==\>\"", "<>", 
             RowBox[{"ToString", "[", "it2", "]"}], "<>", "\"\<\\n\>\""}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"it", "=", "1"}], ",", 
            RowBox[{"it", "<=", 
             RowBox[{"Length", "[", "bcIspin", "]"}]}], ",", 
            RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"WriteString", "[", 
              RowBox[{"file", ",", 
               RowBox[{"\"\<        J[v, idx+\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"it", "-", "1"}], "]"}], "<>", "\"\<] = \>\""}]}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"jacsimpl", "=", 
              RowBox[{"Simplify", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcIspin", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], "[", 
                    RowBox[{"x", ",", " ", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcIspin", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcIspin", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"2", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"3", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcIspin", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcIspin", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "2"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"3", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}], "+", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"bcIspin", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                 RowBox[{"Mx", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                 RowBox[{"My", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                  "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Put", "[", 
              RowBox[{"jacsimpl", ",", "name"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", "\"\<    end\\n\>\""}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"FIELD", " ", "EQS"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<#DEFINE THE FIELD EQUATIONS\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", "\"\<function Field_Eqs_Jac!(i::Int64,j::Int64\>\""}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dx2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dy2\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<dxdy\>\"", 
            "<>", "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,haxis::Float64\>\""}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,siny::Float64\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,cosy::Float64\>\""}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "Funcs", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d0\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d1\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d3\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,J::Matrix{Float64},idx::Int64\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", 
         "\"\<,v::Int64,funcidx::Int64,type::Int8,ordx::Int64,ordy::Int64,x::\
Float64,y::Float64,Mx::Array{Float64, 3}=Mx,My::Array{Float64, \
4}=My)\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it2", "=", "1"}], ",", 
         RowBox[{"it2", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it2", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<    if funcidx==\>\"", "<>", 
             RowBox[{"ToString", "[", "it2", "]"}], "<>", "\"\<\\n\>\""}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"it", "=", "1"}], ",", 
            RowBox[{"it", "<=", 
             RowBox[{"Length", "[", "dfeqs", "]"}]}], ",", 
            RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"jacsimpl", "=", 
               RowBox[{"Simplify", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"dfeqs", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], "[", 
                    RowBox[{"x", ",", " ", "y"}], "]"}]}], "]"}], "*", 
                  RowBox[{"Mx", "[", 
                   RowBox[{"1", ",", 
                    RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                  RowBox[{"My", "[", 
                   RowBox[{"1", ",", 
                    RowBox[{"ordy", "+", "1"}], ",", "j"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"dfeqs", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                  RowBox[{"Mx", "[", 
                   RowBox[{"2", ",", 
                    RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                  RowBox[{"My", "[", 
                   RowBox[{"1", ",", 
                    RowBox[{"ordy", "+", "1"}], ",", "j"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"dfeqs", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"2", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                  RowBox[{"Mx", "[", 
                   RowBox[{"3", ",", 
                    RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                  RowBox[{"My", "[", 
                   RowBox[{"1", ",", 
                    RowBox[{"ordy", "+", "1"}], ",", "j"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"dfeqs", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                  RowBox[{"Mx", "[", 
                   RowBox[{"1", ",", 
                    RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                  RowBox[{"My", "[", 
                   RowBox[{"2", ",", 
                    RowBox[{"ordy", "+", "1"}], ",", "j"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"dfeqs", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "2"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                  RowBox[{"Mx", "[", 
                   RowBox[{"1", ",", 
                    RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                  RowBox[{"My", "[", 
                   RowBox[{"3", ",", 
                    RowBox[{"ordy", "+", "1"}], ",", "j"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"dfeqs", "[", 
                    RowBox[{"[", "it", "]"}], "]"}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                  RowBox[{"Mx", "[", 
                   RowBox[{"2", ",", 
                    RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                  RowBox[{"My", "[", 
                   RowBox[{"2", ",", 
                    RowBox[{"ordy", "+", "1"}], ",", "j"}], "]"}]}]}], 
                "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"jacsimpl", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"dfeqs", "[", 
                   RowBox[{"[", "it", "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], "[", 
                   RowBox[{"x", ",", " ", "y"}], "]"}]}], "]"}], "*", 
                RowBox[{"Mx", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                RowBox[{"My", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                 "]"}]}], "+", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"dfeqs", "[", 
                   RowBox[{"[", "it", "]"}], "]"}], ",", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                RowBox[{"Mx", "[", 
                 RowBox[{"2", ",", 
                  RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                RowBox[{"My", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                 "]"}]}], "+", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"dfeqs", "[", 
                   RowBox[{"[", "it", "]"}], "]"}], ",", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"2", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                RowBox[{"Mx", "[", 
                 RowBox[{"3", ",", 
                  RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                RowBox[{"My", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                 "]"}]}], "+", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"dfeqs", "[", 
                   RowBox[{"[", "it", "]"}], "]"}], ",", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                RowBox[{"Mx", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                RowBox[{"My", "[", 
                 RowBox[{"2", ",", 
                  RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                 "]"}]}], "+", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"dfeqs", "[", 
                   RowBox[{"[", "it", "]"}], "]"}], ",", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "2"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                RowBox[{"Mx", "[", 
                 RowBox[{"1", ",", 
                  RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                RowBox[{"My", "[", 
                 RowBox[{"3", ",", 
                  RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                 "]"}]}], "+", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"dfeqs", "[", 
                   RowBox[{"[", "it", "]"}], "]"}], ",", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
                RowBox[{"Mx", "[", 
                 RowBox[{"2", ",", 
                  RowBox[{"ordx", "+", "1"}], ",", "i"}], "]"}], "*", 
                RowBox[{"My", "[", 
                 RowBox[{"2", ",", 
                  RowBox[{"ordy", "+", "1"}], ",", "j", ",", "type"}], 
                 "]"}]}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"it", "==", 
                RowBox[{"Length", "[", "dfeqs", "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"WriteString", "[", 
                 RowBox[{"file", ",", "\"\<        if j==2\\n\>\""}], "]"}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"ToString", "[", 
                    RowBox[{"vars", "[", 
                    RowBox[{"[", "it2", "]"}], "]"}], "]"}], "==", 
                   "\"\<h\>\""}], ",", 
                  RowBox[{"WriteString", "[", 
                   RowBox[{"file", ",", 
                    RowBox[{"\"\<            J[v, idx+\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"it", "-", "1"}], "]"}], "<>", 
                    "\"\<] = Mx[1, 1 + ordx, i]*My[1, 1 + ordy, 1, \
1]\\n\>\""}]}], "]"}], ",", 
                  RowBox[{"WriteString", "[", 
                   RowBox[{"file", ",", 
                    RowBox[{"\"\<            J[v, idx+\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"it", "-", "1"}], "]"}], "<>", 
                    "\"\<] = 0\\n\>\""}]}], "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"WriteString", "[", 
                 RowBox[{"file", ",", "\"\<        else\\n\>\""}], "]"}], ";",
                 "\[IndentingNewLine]", 
                RowBox[{"WriteString", "[", 
                 RowBox[{"file", ",", 
                  RowBox[{"\"\<            J[v, idx+\>\"", "<>", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"it", "-", "1"}], "]"}], "<>", "\"\<] = \>\""}]}],
                  "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Put", "[", 
                 RowBox[{"jacsimpl", ",", "name"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"WriteString", "[", 
                 RowBox[{"file", ",", "\"\<\\n\>\""}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"WriteString", "[", 
                 RowBox[{"file", ",", "\"\<        end\\n\>\""}], "]"}], 
                ";"}], ",", 
               RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"WriteString", "[", 
                 RowBox[{"file", ",", 
                  RowBox[{"\"\<        J[v, idx+\>\"", "<>", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"it", "-", "1"}], "]"}], "<>", "\"\<] = \>\""}]}],
                  "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Put", "[", 
                 RowBox[{"jacsimpl", ",", "name"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"WriteString", "[", 
                 RowBox[{"file", ",", "\"\<\\n\>\""}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", "\"\<    end\\n\>\""}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<end\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
          "**", "**", "**", "**", "**"}], "*****)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"RESIDUAL", " ", "+", " ", "JACOBIAN"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<#DEFINE THE WHOLE SYSTEM (BCs+FIELD EQS) ON OUR GRID\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", 
        "\"\<function \
residual_jac!(R::Matrix{Float64},J::Matrix{Float64},a::Matrix{Float64}\>\""}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Field\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,spin::Bool\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", 
         "\"\<,x::Vector{Float64}=X,y::Vector{Float64}=Y)\\n\\n\>\""}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<    \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<.a=a[\>\"", 
             "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"(", 
               RowBox[{"it", "-", "1"}], ")"}], "]"}], "<>", "\"\<*Nx+1:\>\"",
              "<>", 
             RowBox[{"ToString", "[", "it", "]"}], "<>", 
             "\"\<*Nx,:]\\n\\n\>\""}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"aux", "=", "\"\<    type=[\>\""}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"it", "!=", 
             RowBox[{"Length", "[", "vars", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"aux", "=", 
             RowBox[{"aux", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"vars", "[", 
                RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
              "\"\<.type,\>\""}]}], ",", 
            RowBox[{"aux", "=", 
             RowBox[{"aux", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"vars", "[", 
                RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
              "\"\<.type\>\""}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<]\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<    \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<=Matrix{Float64}(undef,Nx,Ny); \>\""}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<d\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<dx=Matrix{Float64}(undef,Nx,Ny); \>\""}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<d2\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<dx2=Matrix{Float64}(undef,Nx,Ny); \>\""}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<d\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<dy=Matrix{Float64}(undef,Nx,Ny); \>\""}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<d2\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<dy2=Matrix{Float64}(undef,Nx,Ny); \>\""}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<d2\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<dxdy=Matrix{Float64}(undef,Nx,Ny);\\n\>\""}]}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", "\"\<    haxis=Array{Float64}(undef,Nx);\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "Funcs", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<    d0\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<=Matrix{Float64}(undef,Nx,Ny); \>\""}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<d1\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<=Matrix{Float64}(undef,Nx,Ny); \>\""}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<d2\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<=Matrix{Float64}(undef,Nx,Ny); \>\""}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<d3\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<=Matrix{Float64}(undef,Nx,Ny);\\n\>\""}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<    for i in 1:Nx\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        for j in 1:Ny\\n\>\""}], "]"}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<            \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<[i,j]=\>\"",
              "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<(i,j+1)\\n\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<            d\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<dx[i,j]=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<(i,j+1,dx=1)\\n\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<            d2\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<dx2[i,j]=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<(i,j+1,dx=2)\\n\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<            d\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<dy[i,j]=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<(i,j+1,dy=1)\\n\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<            d2\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<dy2[i,j]=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<(i,j+1,dy=2)\\n\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<            d2\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<dxdy[i,j]=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"vars", "[", 
               RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
             "\"\<(i,j+1,dx=1,dy=1)\\n\>\""}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "Funcs", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<            d0\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<[i,j]=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<(\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<[i,j])\\n\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<            d1\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<[i,j]=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<(\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<[i,j],1)\\n\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<            d2\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<[i,j]=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<(\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<[i,j],2)\\n\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WriteString", "[", 
           RowBox[{"file", ",", 
            RowBox[{"\"\<            d3\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<[i,j]=\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<(\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"Funcs", "[", 
               RowBox[{"[", 
                RowBox[{"it", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
             "\"\<[i,j],3)\\n\>\""}]}], "]"}], ";"}]}], "\[IndentingNewLine]",
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        end\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        haxis[i]=h(i,1)\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<    end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", "\"\<    siny=Array{Float64}(undef,Ny);\\n\>\""}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", "\"\<    cosy=Array{Float64}(undef,Ny);\\n\>\""}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<    for j in 1:Ny\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        siny[j]=sin(y[j+1])\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        cosy[j]=cos(y[j+1])\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<    end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<    if !(R == nothing)\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        #INDEX FOR THE RESIDUAL R\\n\>\""}],
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        idx=1\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<        #LOOP ON ALL X POINTS INCLUDING -1 AND 1\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        for i in 1:Nx\\n\>\""}], "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<        #LOOP ON INTERNAL Y POINTS. NOTE THAT BC ON 0 AND PI/2 \
ARE AUTOMATICALLY IMPOSED BY OUR CHOICE OF BASIS FUNCTIONS (EVEN \
COSINES)\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<            for j in 1:Ny\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                if i==1\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<                    #DEFINE BCS AT THE HORIZON\\n\>\""}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                    if !spin\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", "\"\<                        BC_Horizon!(i,j\>\""}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dxdy[i,j]\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,R,idx\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<)\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                    else\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", "\"\<                        BC_Horizon_Spin!(i,j\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dxdy[i,j]\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,R,idx\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<)\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                    end\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                elseif i==Nx\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<                    #DEFINE BCS AT INFINITY\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                    if !spin\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", "\"\<                        BC_Infinity!(i,j\>\""}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dxdy[i,j]\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,R,idx\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<)\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                    else\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", "\"\<                        BC_Infinity_Spin!(i,j\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dxdy[i,j]\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,R,idx\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<)\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                    end\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                else\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<                    #DEFINE FIELD EQUATIONS EVERYWHERE ELSE ON \
THE GRID\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", "\"\<                    Field_Eqs!(i,j+1\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dxdy[i,j]\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,haxis[i]\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,siny[j]\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,cosy[j]\>\""}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "Funcs", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d0\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d1\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d3\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,R,idx\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,X[i],Y[j])\\n\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                end\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                idx+=NFields\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<            end\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        end\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<    end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<    if !(J == nothing)\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        funcidx=1\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        ordx=0\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        ordy=0\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        for v in 1:Nx*Ny*NFields\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<            #INDEX FOR THE JACOBIAN J COLUMNS\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<            idx=1\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<            #LOOP ON ALL X POINTS INCLUDING -1 AND 1\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<            for i in 1:Nx\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<            #LOOP ON INTERNAL Y POINTS. NOTE THAT BC ON 0 AND \
PI/2 ARE AUTOMATICALLY IMPOSED BY OUR CHOICE OF BASIS FUNCTIONS (EVEN \
COSINES)\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                for j in 1:Ny\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                    if i==1\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<                        #DEFINE BCS AT THE HORIZON\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                        if !spin\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", 
        "\"\<                            BC_Horizon_Jac!(i,j+1\>\""}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dxdy[i,j]\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,J,idx\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", "\"\<,v,funcidx,type[funcidx],ordx,ordy)\\n\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                        else\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", 
        "\"\<                            BC_Horizon_Jac_Spin!(i,j+1\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dxdy[i,j]\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,J,idx\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", "\"\<,v,funcidx,type[funcidx],ordx,ordy)\\n\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                        end\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                    elseif i==Nx\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<                        #DEFINE BCS AT INFINITY\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                        if !spin\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", 
        "\"\<                            BC_Infinity_Jac!(i,j+1\>\""}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dxdy[i,j]\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,J,idx\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", "\"\<,v,funcidx,type[funcidx],ordx,ordy)\\n\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                        else\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", 
        "\"\<                            BC_Infinity_Jac_Spin!(i,j+1\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dxdy[i,j]\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,J,idx\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", "\"\<,v,funcidx,type[funcidx],ordx,ordy)\\n\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                        end\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                    else\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<                        #DEFINE FIELD EQUATIONS EVERYWHERE ELSE \
ON THE GRID\\n\>\""}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", "\"\<                        Field_Eqs_Jac!(i,j+1\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dx2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dy2[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<dxdy[i,j]\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,haxis[i]\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,siny[j]\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,cosy[j]\>\""}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "Funcs", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d0\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d1\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d2\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,d3\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"Funcs", "[", 
              RowBox[{"[", 
               RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
            "\"\<[i,j]\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,J,idx\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", 
         "\"\<,v,funcidx,type[funcidx],ordx,ordy,X[i],Y[j])\\n\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                    end\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                    idx+=NFields\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                end\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<            end\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<            ordx+=1\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<            if mod(v,Nx)==0\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                funcidx+=1\\n\>\""}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                ordx=0\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<            end\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", "\"\<            if mod(v,Nx*NFields)==0\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                funcidx=1\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                ordx=0\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<                ordy+=1\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<            end\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        end\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<        J .= transpose(J)\\n\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<    end\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<end\\n\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
          "**", "**", "**", "**", "**"}], "*****)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "SOLVE_SYSTEM", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{
        "file", ",", 
         "\"\<#SOLVE THE NON-LINEAR SYSTEM TO OBTAIN THE SOLUTIONS\\n\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", "\"\<function solve_system(\>\""}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Field\>\""}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"it", "!=", 
             RowBox[{"Length", "[", "vars", "]"}]}], ",", 
            RowBox[{"aux", "=", 
             RowBox[{"aux", "<>", "\"\<,\>\""}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,tol::Float64\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
            "\"\<::Float64\>\""}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,spin::Bool=false\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", 
         "\"\<,show_trace::Bool=true,iterations::Int64=30,method = \
:newton)\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "aux", "=", 
        "\"\<    return nlsolve(only_fj!((R,J,a)->residual_jac!(R,J,a\>\""}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "params", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"params", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<,spin\>\""}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"aux", "=", 
        RowBox[{"aux", "<>", "\"\<)), vcat(\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"aux", "=", 
           RowBox[{"aux", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"vars", "[", 
              RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", "\"\<.a\>\""}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"it", "!=", 
             RowBox[{"Length", "[", "vars", "]"}]}], ",", 
            RowBox[{"aux", "=", 
             RowBox[{"aux", "<>", "\"\<,\>\""}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"aux", "=", 
        RowBox[{
        "aux", "<>", 
         "\"\<), ftol=0.0,xtol=tol, show_trace=show_trace, iterations = \
iterations, method = method)\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "aux"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<end\\n\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "\"\<nothing\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"subfeqs", "=", 
        RowBox[{"Import", "[", 
         RowBox[{"name", ",", "\"\<Text\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"file", "=", 
        RowBox[{"OpenWrite", "[", 
         RowBox[{"name", ",", 
          RowBox[{"PageWidth", "->", "Infinity"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "vars", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"subfeqs", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"subfeqs", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
                "\"\<[x, y]\>\""}], "->", 
               RowBox[{"ToString", "[", 
                RowBox[{"vars", "[", 
                 RowBox[{"[", "it", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"subfeqs", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"subfeqs", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Derivative[1, 0][\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
                "\"\<][x, y]\>\""}], "->", 
               RowBox[{"\"\<d\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
                "\"\<dx\>\""}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"subfeqs", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"subfeqs", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Derivative[2, 0][\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
                "\"\<][x, y]\>\""}], "->", 
               RowBox[{"\"\<d2\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
                "\"\<dx2\>\""}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"subfeqs", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"subfeqs", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Derivative[0, 1][\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
                "\"\<][x, y]\>\""}], "->", 
               RowBox[{"\"\<d\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
                "\"\<dy\>\""}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"subfeqs", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"subfeqs", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Derivative[0, 2][\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
                "\"\<][x, y]\>\""}], "->", 
               RowBox[{"\"\<d2\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
                "\"\<dy2\>\""}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"subfeqs", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"subfeqs", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Derivative[1, 1][\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
                "\"\<][x, y]\>\""}], "->", 
               RowBox[{"\"\<d2\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"vars", "[", 
                  RowBox[{"[", "it", "]"}], "]"}], "]"}], "<>", 
                "\"\<dxdy\>\""}]}], "}"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"it", "=", "1"}], ",", 
         RowBox[{"it", "<=", 
          RowBox[{"Length", "[", "Funcs", "]"}]}], ",", 
         RowBox[{"it", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"subfeqs", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"subfeqs", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"Funcs", "[", 
                  RowBox[{"[", 
                   RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
                "\"\<[\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Funcs", "[", 
                  RowBox[{"[", 
                   RowBox[{"it", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
                "\"\<]\>\""}], "->", 
               RowBox[{"\"\<d0\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Funcs", "[", 
                  RowBox[{"[", 
                   RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}]}]}], "}"}]}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"subfeqs", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"subfeqs", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Derivative[1][\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Funcs", "[", 
                  RowBox[{"[", 
                   RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
                "\"\<][\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Funcs", "[", 
                  RowBox[{"[", 
                   RowBox[{"it", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
                "\"\<]\>\""}], "->", 
               RowBox[{"\"\<d1\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Funcs", "[", 
                  RowBox[{"[", 
                   RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}]}]}], "}"}]}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"subfeqs", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"subfeqs", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Derivative[2][\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Funcs", "[", 
                  RowBox[{"[", 
                   RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
                "\"\<][\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Funcs", "[", 
                  RowBox[{"[", 
                   RowBox[{"it", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
                "\"\<]\>\""}], "->", 
               RowBox[{"\"\<d2\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Funcs", "[", 
                  RowBox[{"[", 
                   RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}]}]}], "}"}]}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"subfeqs", "=", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"subfeqs", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<Derivative[3][\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Funcs", "[", 
                  RowBox[{"[", 
                   RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}], "<>", 
                "\"\<][\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Funcs", "[", 
                  RowBox[{"[", 
                   RowBox[{"it", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
                "\"\<]\>\""}], "->", 
               RowBox[{"\"\<d3\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"Funcs", "[", 
                  RowBox[{"[", 
                   RowBox[{"it", ",", "1"}], "]"}], "]"}], "]"}]}]}], "}"}]}],
             "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"subfeqs", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"subfeqs", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<Sin[y]\>\"", "->", "\"\<siny\>\""}], ",", 
            RowBox[{"\"\<Cos[y]\>\"", "->", "\"\<cosy\>\""}], ",", 
            RowBox[{"\"\<Cot[y]\>\"", "->", "\"\<cosy/siny\>\""}], ",", 
            RowBox[{"\"\<Csc[y]\>\"", "->", "\"\<1/siny\>\""}], ",", 
            RowBox[{"\"\<Cos[2*y]\>\"", "->", "\"\<(cosy^2-siny^2)\>\""}], 
            ",", 
            RowBox[{"\"\<Sin[2*y]\>\"", "->", "\"\<2*siny*cosy\>\""}], ",", 
            RowBox[{
            "\"\<Sin[3*y]\>\"", "->", "\"\<siny*(3*cosy^2-siny^2)\>\""}], ",", 
            RowBox[{
            "\"\<Cos[3*y]\>\"", "->", "\"\<cosy*(cosy^2-3*siny^2)\>\""}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"subfeqs", "=", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"subfeqs", ",", "rules"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WriteString", "[", 
        RowBox[{"file", ",", "subfeqs"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "subfeqs", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.857553997393458*^9, 3.8575540141903048`*^9}, 
   3.85755405912733*^9, {3.857554137166465*^9, 3.857554144493187*^9}, {
   3.857554218269014*^9, 3.857554260930367*^9}, {3.8575542969163094`*^9, 
   3.857554323487479*^9}, {3.857554382357492*^9, 3.85755450370465*^9}, {
   3.857554571108707*^9, 3.8575545958102407`*^9}, {3.857554709097776*^9, 
   3.857554813052734*^9}, {3.8575548510384007`*^9, 3.857554919772991*^9}, {
   3.857554976360003*^9, 3.857554989459003*^9}, {3.857555031862342*^9, 
   3.8575550451834784`*^9}, {3.857555168300747*^9, 3.857555185254381*^9}, {
   3.8575552496558037`*^9, 3.857555253185071*^9}, {3.857555312054843*^9, 
   3.857555334992085*^9}, {3.8575553863047256`*^9, 3.857555386674883*^9}, {
   3.8575555887479*^9, 3.857555655016221*^9}, {3.857555692585503*^9, 
   3.8575557441322937`*^9}, {3.857555789729591*^9, 3.8575558369423113`*^9}, {
   3.857555921211533*^9, 3.857555950007971*^9}, {3.85755600349156*^9, 
   3.857556035304364*^9}, {3.857556072134601*^9, 3.8575560768895903`*^9}, {
   3.8575561379465923`*^9, 3.8575564541117563`*^9}, {3.857556715239831*^9, 
   3.857556725935933*^9}, {3.857556760256875*^9, 3.857556853408367*^9}, {
   3.857561750719923*^9, 3.857561897589283*^9}, {3.857562400581565*^9, 
   3.857562401247727*^9}, {3.857584614972267*^9, 3.857584627637211*^9}, {
   3.857651933838724*^9, 3.857651942844145*^9}, {3.8582431906152267`*^9, 
   3.8582431910254107`*^9}, {3.858248369132947*^9, 3.858248407997314*^9}, {
   3.8582484583715363`*^9, 3.858248459977499*^9}, {3.858248547785049*^9, 
   3.85824865294172*^9}, {3.858248694199761*^9, 3.858248698857031*^9}, {
   3.8582487640708017`*^9, 3.8582487720973883`*^9}, {3.858248886089387*^9, 
   3.858248910055766*^9}, {3.858248990080246*^9, 3.8582489953105993`*^9}, {
   3.8582497566391573`*^9, 3.858249781124442*^9}, {3.858249856684018*^9, 
   3.858249874918494*^9}, {3.8582499180014544`*^9, 3.8582500004412746`*^9}, {
   3.858250189463264*^9, 3.858250272701215*^9}, {3.858251232107174*^9, 
   3.85825123423286*^9}, {3.85825142536304*^9, 3.858251430281591*^9}, {
   3.858333234528633*^9, 3.858333234844676*^9}, {3.85868403967562*^9, 
   3.8586840417179203`*^9}, {3.858870492714898*^9, 3.8588705028785887`*^9}, {
   3.8598966972846212`*^9, 3.859896760924268*^9}, {3.859896809023711*^9, 
   3.85989682823425*^9}, {3.859896975900662*^9, 3.859896977161456*^9}, {
   3.8599000836003437`*^9, 3.859900248742135*^9}, {3.859959094465509*^9, 
   3.859959109600807*^9}, {3.859959139841207*^9, 3.8599591428226757`*^9}, {
   3.859959205049037*^9, 3.859959347985718*^9}, {3.8599594065111647`*^9, 
   3.8599595205742292`*^9}, {3.859959552545869*^9, 3.85995959239043*^9}, {
   3.859959628487467*^9, 3.8599596849438*^9}, {3.8599597164472513`*^9, 
   3.859959722639823*^9}, 3.859959765021872*^9, {3.859959806809361*^9, 
   3.859960070052969*^9}, {3.859960104733809*^9, 3.859960199057413*^9}, {
   3.859960234142371*^9, 3.859960241109253*^9}, {3.859960286913896*^9, 
   3.859960370689344*^9}, {3.8599605540414143`*^9, 3.85996058854041*^9}, {
   3.859960624020712*^9, 3.859960706500472*^9}, {3.85996073823494*^9, 
   3.859960914564672*^9}, {3.859961017776716*^9, 3.85996106371091*^9}, {
   3.859961300949032*^9, 3.859961396165514*^9}, {3.859961462536923*^9, 
   3.859961622000223*^9}, {3.859961734918399*^9, 3.859961736106691*^9}, {
   3.85996176718371*^9, 3.859961781158046*^9}, {3.859961820515614*^9, 
   3.8599619233966827`*^9}, {3.8599619542421007`*^9, 3.8599619986874*^9}, {
   3.859962031202664*^9, 3.859962072014885*^9}, {3.859962151596675*^9, 
   3.859962182493245*^9}, {3.8599622399288073`*^9, 3.859962261378312*^9}, {
   3.859962307729115*^9, 3.859962320249948*^9}, {3.859962450355361*^9, 
   3.859962467465828*^9}, {3.859962499030788*^9, 3.859962710298637*^9}, {
   3.859962745870693*^9, 3.859962749294324*^9}, {3.859962787559564*^9, 
   3.859962816654978*^9}, {3.8599628653502483`*^9, 3.859962868267126*^9}, {
   3.8599629440553627`*^9, 3.8599629701288567`*^9}, {3.85996300971637*^9, 
   3.859963010494831*^9}, {3.859963231949601*^9, 3.8599632326736298`*^9}, {
   3.859972782271757*^9, 3.859972868871838*^9}, {3.8600674771955767`*^9, 
   3.860067633591363*^9}, {3.86006767456022*^9, 3.86006774018182*^9}, {
   3.860067804949933*^9, 3.8600678070801897`*^9}, {3.860072883450212*^9, 
   3.8600728837204723`*^9}, {3.86023867905238*^9, 3.860238693443918*^9}, {
   3.8602390107976627`*^9, 3.860239039751696*^9}, {3.860239092115552*^9, 
   3.860239102801639*^9}, {3.860486670618514*^9, 3.860486676847909*^9}, {
   3.86170615325642*^9, 3.861706211449411*^9}, {3.861707266594632*^9, 
   3.861707271030978*^9}, {3.861710045089156*^9, 3.861710048927702*^9}, {
   3.86171030520681*^9, 3.8617103116917953`*^9}, {3.8617106169283857`*^9, 
   3.861710624657487*^9}, {3.861710694792522*^9, 3.861710728081435*^9}, {
   3.861739412259871*^9, 3.8617394175392017`*^9}, {3.861739537075199*^9, 
   3.8617395382133827`*^9}, {3.8617852282637453`*^9, 3.861785232761999*^9}, {
   3.861792643450739*^9, 3.8617926480370893`*^9}, {3.861793003613592*^9, 
   3.861793055227921*^9}, {3.8617930900348053`*^9, 3.861793112429389*^9}, {
   3.861793315688519*^9, 3.861793366575726*^9}, {3.861793452901751*^9, 
   3.8617934626296062`*^9}, {3.8617935389159107`*^9, 
   3.8617935815457067`*^9}, {3.8617937736038523`*^9, 3.861793998349206*^9}, {
   3.861794099162015*^9, 3.861794127523217*^9}, {3.861794159299572*^9, 
   3.8617941644351807`*^9}, {3.861794255294211*^9, 3.8617942628002234`*^9}, {
   3.8617960618773823`*^9, 3.86179610656429*^9}, {3.861796168399397*^9, 
   3.861796275254387*^9}, 3.8617963322885036`*^9, {3.861822970184147*^9, 
   3.8618229775021152`*^9}, {3.861959703212975*^9, 3.861959725968656*^9}, {
   3.8619597707898703`*^9, 3.8619598240702953`*^9}, {3.861959859885198*^9, 
   3.86195993290873*^9}, {3.86195999614154*^9, 3.861960026851728*^9}, {
   3.861960186081756*^9, 3.86196020064852*^9}, {3.861969199322253*^9, 
   3.8619692043180027`*^9}, {3.861969254924374*^9, 3.861969256224745*^9}, {
   3.861971144801094*^9, 3.861971146942688*^9}, {3.861971179410285*^9, 
   3.861971311433745*^9}, {3.86197139515298*^9, 3.861971456215845*^9}, {
   3.8619727102076797`*^9, 3.8619727662870617`*^9}, {3.8619728380629883`*^9, 
   3.861972866272253*^9}, {3.861972898307089*^9, 3.861972899036742*^9}, {
   3.8619729371056337`*^9, 3.861972954670792*^9}, {3.8619730000688143`*^9, 
   3.861973032582901*^9}, {3.8619730644696827`*^9, 3.8619732486208763`*^9}, {
   3.861973300778171*^9, 3.8619735034634438`*^9}, {3.8619735461604853`*^9, 
   3.86197357820621*^9}, {3.8619736199401073`*^9, 3.8619736376017933`*^9}, {
   3.8619736693128233`*^9, 3.8619736839338303`*^9}, {3.861973735358141*^9, 
   3.8619737626977*^9}, {3.861973795994451*^9, 3.861973959395624*^9}, {
   3.861974015528735*^9, 3.8619740323765097`*^9}, {3.861974099950102*^9, 
   3.861974129864367*^9}, 3.86197420841109*^9, {3.8619742384292803`*^9, 
   3.861974334951363*^9}, {3.861974377839075*^9, 3.8619744180005617`*^9}, {
   3.861974454180386*^9, 3.861974495371076*^9}, {3.8619745602657013`*^9, 
   3.861974600458379*^9}, 3.86197472142008*^9, {3.861975099191642*^9, 
   3.86197509937385*^9}, {3.861975326262724*^9, 3.861975336759274*^9}, {
   3.861981222366744*^9, 3.861981239821343*^9}, {3.862651086631044*^9, 
   3.862651173798328*^9}, {3.862651314599689*^9, 3.8626513266240396`*^9}, {
   3.862651499043992*^9, 3.862651626264319*^9}, {3.86265168595481*^9, 
   3.86265169604545*^9}, {3.862651977291206*^9, 3.862652013852831*^9}, {
   3.862652272141204*^9, 3.862652369167014*^9}, {3.862652457139282*^9, 
   3.862652470357531*^9}, {3.862652606433132*^9, 3.8626526226852913`*^9}, {
   3.862652744106278*^9, 3.862652778654204*^9}, {3.8626528205027027`*^9, 
   3.862652856067945*^9}, {3.862652941959103*^9, 3.862653070988916*^9}, {
   3.862653124662209*^9, 3.862653143367701*^9}, {3.8626532612503*^9, 
   3.862653283572357*^9}, {3.8626533359794493`*^9, 3.862653360812879*^9}, {
   3.862653899584874*^9, 3.8626538999740877`*^9}, {3.862653950466096*^9, 
   3.862653975011442*^9}, {3.8626568028969593`*^9, 3.862656804040566*^9}, {
   3.868711092266315*^9, 3.8687110949551783`*^9}, {3.8687112918268147`*^9, 
   3.8687113304084663`*^9}, {3.868711407840549*^9, 3.8687114545812807`*^9}, {
   3.8687119583836517`*^9, 3.8687120276839733`*^9}, {3.868730784440083*^9, 
   3.8687307979250183`*^9}, {3.868730831709697*^9, 3.868730903441536*^9}, {
   3.8687309463435907`*^9, 3.8687310012511263`*^9}, {3.86873106122069*^9, 
   3.868731099358906*^9}, 3.868731165127221*^9, {3.868731264639214*^9, 
   3.868731265976636*^9}, {3.868958750056807*^9, 3.8689587906947393`*^9}, {
   3.868958930710918*^9, 3.868959008756032*^9}, {3.868959052026258*^9, 
   3.868959056663617*^9}, {3.8689593185042*^9, 3.8689593228257303`*^9}, {
   3.868961962516699*^9, 3.8689619732469397`*^9}, {3.8689620524500303`*^9, 
   3.868962055079883*^9}, {3.868962677618495*^9, 3.8689626933954782`*^9}, 
   3.8689628391654053`*^9, {3.868964126228724*^9, 3.868964170481317*^9}, {
   3.868964301464858*^9, 3.8689643387145042`*^9}, {3.868964389126679*^9, 
   3.868964399692325*^9}, {3.868964513924219*^9, 3.868964527399665*^9}, {
   3.8689645658675117`*^9, 3.868964568825976*^9}, {3.868965553454692*^9, 
   3.868965620409358*^9}, {3.8689657388387213`*^9, 3.8689657389762506`*^9}, {
   3.8689708386740713`*^9, 3.868970839756393*^9}, {3.868971052162962*^9, 
   3.8689710534197206`*^9}, {3.868971091011837*^9, 3.868971191569016*^9}, {
   3.868971312653956*^9, 3.8689713422329607`*^9}, {3.868971419576928*^9, 
   3.8689714237601213`*^9}, {3.868971512066607*^9, 3.8689715649303007`*^9}, {
   3.86897164164401*^9, 3.868971771922676*^9}, {3.868971823066691*^9, 
   3.8689718293814173`*^9}, {3.8771759642019453`*^9, 
   3.8771760779312468`*^9}, {3.877176154427958*^9, 3.877176236486456*^9}, {
   3.877176312651898*^9, 3.877176313352948*^9}, {3.877176395545261*^9, 
   3.877176448040679*^9}, {3.8792317108065147`*^9, 3.879231749785342*^9}, {
   3.879231790898431*^9, 3.879231795858626*^9}, {3.879250135104002*^9, 
   3.879250241683648*^9}, {3.879250296413529*^9, 3.8792503019894657`*^9}, {
   3.879250353661681*^9, 3.8792503539689817`*^9}, {3.879251164905713*^9, 
   3.8792511658365717`*^9}, {3.87925781743622*^9, 3.879257820573374*^9}, {
   3.879257868065077*^9, 3.879257868283272*^9}, {3.879317023568328*^9, 
   3.879317040650618*^9}, {3.8793171473406143`*^9, 3.8793171522362003`*^9}, {
   3.879317368021134*^9, 3.8793174186288013`*^9}, {3.879317475047906*^9, 
   3.8793175594382343`*^9}, 3.879317790307479*^9, {3.879317887594228*^9, 
   3.879317980884389*^9}, {3.879318025113572*^9, 3.87931813771159*^9}, {
   3.8793181893614187`*^9, 3.879318192364234*^9}, {3.879318223153675*^9, 
   3.8793184148342323`*^9}, {3.879318474943798*^9, 3.87931850876581*^9}, {
   3.879318542547999*^9, 3.879318548935886*^9}, {3.879318581243779*^9, 
   3.8793185910033617`*^9}, {3.879318640284284*^9, 3.879318834615507*^9}, {
   3.879319232149057*^9, 3.879319383417725*^9}, {3.8793194977961607`*^9, 
   3.879319589204246*^9}, {3.8793201121711407`*^9, 3.879320180264201*^9}, {
   3.879320216812273*^9, 3.879320217094851*^9}, {3.879406433405916*^9, 
   3.87940645170048*^9}},ExpressionUUID->"0ec6db90-50be-442a-a909-\
e48d3fe5ccaa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Kerr", "Title",
 CellChangeTimes->{{3.860072953434128*^9, 3.860072954040516*^9}, {
  3.861792242983124*^9, 3.8617922434954844`*^9}, {3.879320497885631*^9, 
  3.879320498420061*^9}, {3.879333065922628*^9, 
  3.879333067189168*^9}},ExpressionUUID->"c4723dc7-a631-45e6-9642-\
7660fa604c27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879257584146062*^9, 3.8792575868973303`*^9}, {
   3.87931697834184*^9, 3.879316980032757*^9}, 3.8793209945025597`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"15e7f837-326a-461e-a643-3ca8f88da489"],

Cell[BoxData["\<\"/Users/pedrofernandes/Documents/Nextcloud/Spinning Black \
Holes/Examples/Kerr/Deriving FEqs\"\>"], "Output",
 CellChangeTimes->{3.879320994751388*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"2d2f8548-0f04-4470-916f-39c3626988c9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</EqsDiag.mx\>\""}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.8619089088984737`*^9, 3.861908912154148*^9}, {
   3.8771755987968683`*^9, 3.877175604771503*^9}, {3.879257549847032*^9, 
   3.879257560117909*^9}, {3.8792575909681892`*^9, 3.8792576144861717`*^9}, {
   3.879257669934411*^9, 3.879257671568458*^9}, 3.879316937799634*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"e4969b2e-7ee4-4667-ad5e-2def94f57dc2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BCsH", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "+", 
      RowBox[{"2", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y"}], "]"}]}]}], ",", 
     RowBox[{
      SuperscriptBox["h", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{
      RowBox[{"W", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "-", "WBC"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BCsI", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "-", "1"}], ",", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "-", "1"}], ",", 
     RowBox[{
      RowBox[{"h", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "-", "1"}], ",", 
     RowBox[{"W", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.860355759356203*^9, 3.860355766716346*^9}, {
  3.8603558002601357`*^9, 3.860355803117217*^9}, {3.860486832890007*^9, 
  3.860486861282238*^9}, {3.861705826745346*^9, 3.861705867770732*^9}, {
  3.8626520969971333`*^9, 3.862652097530609*^9}, {3.879320912085051*^9, 
  3.879320914665079*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"e3c025e9-cd54-472e-a780-57b01de12a1d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BCsHspin", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "+", 
      RowBox[{"2", 
       RowBox[{
        SuperscriptBox["g", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y"}], "]"}]}]}], ",", 
     RowBox[{
      SuperscriptBox["h", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"1", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{
      RowBox[{"W", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "-", 
      RowBox[{
       SuperscriptBox["W", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BCsIspin", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "-", "1"}], ",", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "-", "1"}], ",", 
     RowBox[{
      RowBox[{"h", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "-", "1"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["W", 
        TagBox[
         RowBox[{"(", 
          RowBox[{"1", ",", "0"}], ")"}],
         Derivative],
        MultilineFunction->None], "[", 
       RowBox[{"x", ",", "y"}], "]"}], "+", 
      RowBox[{"WBC", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["f", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], ")"}], "2"]}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.86265210550329*^9, 3.862652151340728*^9}, {
  3.8789946371527433`*^9, 3.878994637520398*^9}, {3.879320916986991*^9, 
  3.879320919481439*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"129f3a0f-8a96-4f86-a1b1-84556fa1340c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PrintToJulia", "[", 
   RowBox[{
   "\"\<../System.jl\>\"", ",", "EqsTotalxFinal", ",", "BCsH", ",", "BCsI", 
    ",", "BCsHspin", ",", "BCsIspin", ",", 
    RowBox[{"{", 
     RowBox[{"f", ",", "g", ",", "h", ",", "W"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"WBC", ",", "rh"}], "}"}], ",", 
    RowBox[{"{", "}"}], ",", 
    RowBox[{"{", "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.868964594777297*^9, 3.868964603277141*^9}, {
   3.868964829104918*^9, 3.86896483138064*^9}, {3.8689712147382717`*^9, 
   3.868971214867064*^9}, {3.8771756230363073`*^9, 3.8771756270861177`*^9}, 
   3.877175842899383*^9, {3.878994789242201*^9, 3.878994795045865*^9}, {
   3.879250252489191*^9, 3.879250254392638*^9}, 3.8792510978074093`*^9, {
   3.879316953746491*^9, 3.879316954231287*^9}, {3.879316986883555*^9, 
   3.879317014831564*^9}, {3.8793172984300423`*^9, 3.8793173054439383`*^9}, {
   3.879319902219657*^9, 3.8793199257946253`*^9}, 3.879320003901306*^9, {
   3.879320922813443*^9, 3.8793209292923517`*^9}, {3.879321037269867*^9, 
   3.8793210693405123`*^9}, {3.879406455899825*^9, 
   3.879406456544498*^9}},ExpressionUUID->"31de42eb-ca66-4a62-b6c3-\
4eebac0995b2"],

Cell[BoxData["\<\"#DEFINE RESOLUTION IN x\\nglobal const Nx=40\\n#DEFINE \
RESOLUTION IN y\\nglobal const \
Ny=8\\ninclude(\\\"../../src/SpinningBlackHoles.jl\\\")\\nusing \
.SpinningBlackHoles, NLsolve, DelimitedFiles, Cubature\\n\\nglobal const \
NFields=4\\n#DEFINE BOUNDARY CONDITIONS AT THE HORIZON\\nfunction \
BC_Horizon!(i::Int64,j::Int64,f::Float64,dfdx::Float64,d2fdx2::Float64,dfdy::\
Float64,d2fdy2::Float64,d2fdxdy::Float64,g::Float64,dgdx::Float64,d2gdx2::\
Float64,dgdy::Float64,d2gdy2::Float64,d2gdxdy::Float64,h::Float64,dhdx::\
Float64,d2hdx2::Float64,dhdy::Float64,d2hdy2::Float64,d2hdxdy::Float64,W::\
Float64,dWdx::Float64,d2Wdx2::Float64,dWdy::Float64,d2Wdy2::Float64,d2Wdxdy::\
Float64,R::Matrix{Float64},idx::Int64,WBC::Float64,rh::Float64)\\n    \
R[idx+0] = f - 2*dfdx\\n    R[idx+1] = g + 2*dgdx\\n    R[idx+2] = dhdx\\n    \
R[idx+3] = -WBC + W\\nend\\n\\n#DEFINE BOUNDARY CONDITIONS AT THE HORIZON - \
SPIN AS INPUT PARAMETER\\nfunction \
BC_Horizon_Spin!(i::Int64,j::Int64,f::Float64,dfdx::Float64,d2fdx2::Float64,\
dfdy::Float64,d2fdy2::Float64,d2fdxdy::Float64,g::Float64,dgdx::Float64,\
d2gdx2::Float64,dgdy::Float64,d2gdy2::Float64,d2gdxdy::Float64,h::Float64,\
dhdx::Float64,d2hdx2::Float64,dhdy::Float64,d2hdy2::Float64,d2hdxdy::Float64,\
W::Float64,dWdx::Float64,d2Wdx2::Float64,dWdy::Float64,d2Wdy2::Float64,\
d2Wdxdy::Float64,R::Matrix{Float64},idx::Int64,WBC::Float64,rh::Float64)\\n   \
 R[idx+0] = f - 2*dfdx\\n    R[idx+1] = g + 2*dgdx\\n    R[idx+2] = dhdx\\n   \
 R[idx+3] = W - dWdx\\nend\\n\\n#DEFINE BOUNDARY CONDITIONS AT THE \
INFINITY\\nfunction \
BC_Infinity!(i::Int64,j::Int64,f::Float64,dfdx::Float64,d2fdx2::Float64,dfdy::\
Float64,d2fdy2::Float64,d2fdxdy::Float64,g::Float64,dgdx::Float64,d2gdx2::\
Float64,dgdy::Float64,d2gdy2::Float64,d2gdxdy::Float64,h::Float64,dhdx::\
Float64,d2hdx2::Float64,dhdy::Float64,d2hdy2::Float64,d2hdxdy::Float64,W::\
Float64,dWdx::Float64,d2Wdx2::Float64,dWdy::Float64,d2Wdy2::Float64,d2Wdxdy::\
Float64,R::Matrix{Float64},idx::Int64,WBC::Float64,rh::Float64)\\n    \
R[idx+0] = -1 + f\\n    R[idx+1] = -1 + g\\n    R[idx+2] = -1 + h\\n    \
R[idx+3] = W\\nend\\n\\n#DEFINE BOUNDARY CONDITIONS AT THE INFINITY - SPIN AS \
INPUT PARAMETER\\nfunction \
BC_Infinity_Spin!(i::Int64,j::Int64,f::Float64,dfdx::Float64,d2fdx2::Float64,\
dfdy::Float64,d2fdy2::Float64,d2fdxdy::Float64,g::Float64,dgdx::Float64,\
d2gdx2::Float64,dgdy::Float64,d2gdy2::Float64,d2gdxdy::Float64,h::Float64,\
dhdx::Float64,d2hdx2::Float64,dhdy::Float64,d2hdy2::Float64,d2hdxdy::Float64,\
W::Float64,dWdx::Float64,d2Wdx2::Float64,dWdy::Float64,d2Wdy2::Float64,\
d2Wdxdy::Float64,R::Matrix{Float64},idx::Int64,WBC::Float64,rh::Float64)\\n   \
 R[idx+0] = -1 + f\\n    R[idx+1] = -1 + g\\n    R[idx+2] = -1 + h\\n    \
R[idx+3] = WBC*(1 + dfdx)^2 + dWdx\\nend\\n\\n#DEFINE THE FIELD \
EQUATIONS\\nfunction \
Field_Eqs!(i::Int64,j::Int64,f::Float64,dfdx::Float64,d2fdx2::Float64,dfdy::\
Float64,d2fdy2::Float64,d2fdxdy::Float64,g::Float64,dgdx::Float64,d2gdx2::\
Float64,dgdy::Float64,d2gdy2::Float64,d2gdxdy::Float64,h::Float64,dhdx::\
Float64,d2hdx2::Float64,dhdy::Float64,d2hdy2::Float64,d2hdxdy::Float64,W::\
Float64,dWdx::Float64,d2Wdx2::Float64,dWdy::Float64,d2Wdy2::Float64,d2Wdxdy::\
Float64,haxis::Float64,siny::Float64,cosy::Float64,R::Matrix{Float64},idx::\
Int64,WBC::Float64,rh::Float64,x::Float64,y::Float64)\\n    R[idx+0] = -((-1 \
+ x)^4*(((1 + x)*f*((1 + x)*dfdy*dgdy + (-1 + x)^2*(2*f + (1 + \
x)*dfdx)*dgdx))/(2*(-1 + x)^2) - g^2*siny^2*(4*W^2 + dWdy^2 + 4*(-1 + \
x)*W*dWdx + (-1 + x)^2*dWdx^2) + ((1 + x)*g*(-((1 + x)*(dfdy^2 + (-1 + \
x)^2*dfdx^2)) + f*((1 + x)*cosy/siny*dfdy + (1 + x)*d2fdy2 + (-1 + x)^2*(dfdx \
+ (1 + x)*d2fdx2))))/(-1 + x)^2))\\n\\n    R[idx+1] = -((-1 + x)^2*(-4*(1 + \
x)*g*siny*(dfdy*dWdy + (-1 + x)*dfdx*(2*W + (-1 + x)*dWdx)) + f*(3*(1 + \
x)*siny*(dgdy*dWdy + (-1 + x)*dgdx*(2*W + (-1 + x)*dWdx)) + 2*g*(-4*x*siny*W \
+ 3*(1 + x)*cosy*dWdy + siny*((1 + x)*d2Wdy2 + (-1 + x)*((3 + x)*dWdx + (-1 + \
x^2)*d2Wdx2))))))\\n\\n    R[idx+2] = (-1 + x)^2*f*(-4*(-1 + x)*g^2 - (1 + \
x)*(dgdy^2 + (-1 + x)^2*dgdx^2) + 2*g*(2*(1 + x)*cosy/siny*dgdy + (1 + \
x)*d2gdy2 + (-1 + x)*((-3 + x)*dgdx + (-1 + x^2)*d2gdx2)))\\n\\n    if \
j==2\\n        R[idx+3] = haxis-1\\n    else\\n        R[idx+3] = -((-1 + \
x)^2*(4*(1 + x)*f^2*g*h^2*((1 + x)*cosy/siny*dgdy - 2*(-1 + x)*dgdx) + (1 + \
x)^2*f^2*h^2*(dgdy^2 + (-1 + x)^2*dgdx^2) + 3*(-1 + \
x)^2*g^3*h^2*siny^2*(4*W^2 + dWdy^2 + 4*(-1 + x)*W*dWdx + (-1 + x)^2*dWdx^2) \
- (1 + x)*g^2*(4*(-1 + x)^2*f*h^2*dfdx + (1 + x)*h^2*(dfdy^2 + (-1 + \
x)^2*dfdx^2) + 2*f^2*(4*(-1 + x)*h^2 - (1 + x)*(dhdy^2 + (-1 + x)^2*dhdx^2) + \
(1 + x)*h*(d2hdy2 + (-1 + x)*(dhdx + (-1 + x)*d2hdx2))))))\\n    end\\nend\\n\
\\n#DEFINE BOUNDARY CONDITIONS AT THE HORIZON\\nfunction \
BC_Horizon_Jac!(i::Int64,j::Int64,f::Float64,dfdx::Float64,d2fdx2::Float64,\
dfdy::Float64,d2fdy2::Float64,d2fdxdy::Float64,g::Float64,dgdx::Float64,\
d2gdx2::Float64,dgdy::Float64,d2gdy2::Float64,d2gdxdy::Float64,h::Float64,\
dhdx::Float64,d2hdx2::Float64,dhdy::Float64,d2hdy2::Float64,d2hdxdy::Float64,\
W::Float64,dWdx::Float64,d2Wdx2::Float64,dWdy::Float64,d2Wdy2::Float64,\
d2Wdxdy::Float64,J::Matrix{Float64},idx::Int64,WBC::Float64,rh::Float64,v::\
Int64,funcidx::Int64,type::Int8,ordx::Int64,ordy::Int64,Mx::Array{Float64, \
3}=Mx,My::Array{Float64, 4}=My)\\n    if funcidx==1\\n        J[v, idx+0] = \
(Mx[1, 1 + ordx, i] - 2*Mx[2, 1 + ordx, i])*My[1, 1 + ordy, j, type]\\n       \
 J[v, idx+1] = 0\\n        J[v, idx+2] = 0\\n        J[v, idx+3] = 0\\n    \
end\\n    if funcidx==2\\n        J[v, idx+0] = 0\\n        J[v, idx+1] = \
(Mx[1, 1 + ordx, i] + 2*Mx[2, 1 + ordx, i])*My[1, 1 + ordy, j, type]\\n       \
 J[v, idx+2] = 0\\n        J[v, idx+3] = 0\\n    end\\n    if funcidx==3\\n   \
     J[v, idx+0] = 0\\n        J[v, idx+1] = 0\\n        J[v, idx+2] = Mx[2, \
1 + ordx, i]*My[1, 1 + ordy, j, type]\\n        J[v, idx+3] = 0\\n    end\\n  \
  if funcidx==4\\n        J[v, idx+0] = 0\\n        J[v, idx+1] = 0\\n        \
J[v, idx+2] = 0\\n        J[v, idx+3] = Mx[1, 1 + ordx, i]*My[1, 1 + ordy, j, \
type]\\n    end\\nend\\n\\nfunction \
BC_Horizon_Jac_Spin!(i::Int64,j::Int64,f::Float64,dfdx::Float64,d2fdx2::\
Float64,dfdy::Float64,d2fdy2::Float64,d2fdxdy::Float64,g::Float64,dgdx::\
Float64,d2gdx2::Float64,dgdy::Float64,d2gdy2::Float64,d2gdxdy::Float64,h::\
Float64,dhdx::Float64,d2hdx2::Float64,dhdy::Float64,d2hdy2::Float64,d2hdxdy::\
Float64,W::Float64,dWdx::Float64,d2Wdx2::Float64,dWdy::Float64,d2Wdy2::\
Float64,d2Wdxdy::Float64,J::Matrix{Float64},idx::Int64,WBC::Float64,rh::\
Float64,v::Int64,funcidx::Int64,type::Int8,ordx::Int64,ordy::Int64,Mx::Array{\
Float64, 3}=Mx,Cy::Array{Float64, 4}=My)\\n    if funcidx==1\\n        J[v, \
idx+0] = (Mx[1, 1 + ordx, i] - 2*Mx[2, 1 + ordx, i])*My[1, 1 + ordy, j, type]\
\\n        J[v, idx+1] = 0\\n        J[v, idx+2] = 0\\n        J[v, idx+3] = \
0\\n    end\\n    if funcidx==2\\n        J[v, idx+0] = 0\\n        J[v, \
idx+1] = (Mx[1, 1 + ordx, i] + 2*Mx[2, 1 + ordx, i])*My[1, 1 + ordy, j, type]\
\\n        J[v, idx+2] = 0\\n        J[v, idx+3] = 0\\n    end\\n    if \
funcidx==3\\n        J[v, idx+0] = 0\\n        J[v, idx+1] = 0\\n        J[v, \
idx+2] = Mx[2, 1 + ordx, i]*My[1, 1 + ordy, j, type]\\n        J[v, idx+3] = \
0\\n    end\\n    if funcidx==4\\n        J[v, idx+0] = 0\\n        J[v, \
idx+1] = 0\\n        J[v, idx+2] = 0\\n        J[v, idx+3] = (Mx[1, 1 + ordx, \
i] - Mx[2, 1 + ordx, i])*My[1, 1 + ordy, j, type]\\n    \
end\\nend\\n\\n#DEFINE BOUNDARY CONDITIONS AT THE INFINITY\\nfunction \
BC_Infinity_Jac!(i::Int64,j::Int64,f::Float64,dfdx::Float64,d2fdx2::Float64,\
dfdy::Float64,d2fdy2::Float64,d2fdxdy::Float64,g::Float64,dgdx::Float64,\
d2gdx2::Float64,dgdy::Float64,d2gdy2::Float64,d2gdxdy::Float64,h::Float64,\
dhdx::Float64,d2hdx2::Float64,dhdy::Float64,d2hdy2::Float64,d2hdxdy::Float64,\
W::Float64,dWdx::Float64,d2Wdx2::Float64,dWdy::Float64,d2Wdy2::Float64,\
d2Wdxdy::Float64,J::Matrix{Float64},idx::Int64,WBC::Float64,rh::Float64,v::\
Int64,funcidx::Int64,type::Int8,ordx::Int64,ordy::Int64,Mx::Array{Float64, \
3}=Mx,My::Array{Float64, 4}=My)\\n    if funcidx==1\\n        J[v, idx+0] = \
Mx[1, 1 + ordx, i]*My[1, 1 + ordy, j, type]\\n        J[v, idx+1] = 0\\n      \
  J[v, idx+2] = 0\\n        J[v, idx+3] = 0\\n    end\\n    if funcidx==2\\n  \
      J[v, idx+0] = 0\\n        J[v, idx+1] = Mx[1, 1 + ordx, i]*My[1, 1 + \
ordy, j, type]\\n        J[v, idx+2] = 0\\n        J[v, idx+3] = 0\\n    \
end\\n    if funcidx==3\\n        J[v, idx+0] = 0\\n        J[v, idx+1] = \
0\\n        J[v, idx+2] = Mx[1, 1 + ordx, i]*My[1, 1 + ordy, j, type]\\n      \
  J[v, idx+3] = 0\\n    end\\n    if funcidx==4\\n        J[v, idx+0] = 0\\n  \
      J[v, idx+1] = 0\\n        J[v, idx+2] = 0\\n        J[v, idx+3] = Mx[1, \
1 + ordx, i]*My[1, 1 + ordy, j, type]\\n    end\\nend\\n\\nfunction \
BC_Infinity_Jac_Spin!(i::Int64,j::Int64,f::Float64,dfdx::Float64,d2fdx2::\
Float64,dfdy::Float64,d2fdy2::Float64,d2fdxdy::Float64,g::Float64,dgdx::\
Float64,d2gdx2::Float64,dgdy::Float64,d2gdy2::Float64,d2gdxdy::Float64,h::\
Float64,dhdx::Float64,d2hdx2::Float64,dhdy::Float64,d2hdy2::Float64,d2hdxdy::\
Float64,W::Float64,dWdx::Float64,d2Wdx2::Float64,dWdy::Float64,d2Wdy2::\
Float64,d2Wdxdy::Float64,J::Matrix{Float64},idx::Int64,WBC::Float64,rh::\
Float64,v::Int64,funcidx::Int64,type::Int8,ordx::Int64,ordy::Int64,Mx::Array{\
Float64, 3}=Mx,My::Array{Float64, 4}=My)\\n    if funcidx==1\\n        J[v, \
idx+0] = Mx[1, 1 + ordx, i]*My[1, 1 + ordy, j, type]\\n        J[v, idx+1] = \
0\\n        J[v, idx+2] = 0\\n        J[v, idx+3] = 2*WBC*Mx[2, 1 + ordx, \
i]*My[1, 1 + ordy, j, type]*(1 + dfdx)\\n    end\\n    if funcidx==2\\n       \
 J[v, idx+0] = 0\\n        J[v, idx+1] = Mx[1, 1 + ordx, i]*My[1, 1 + ordy, \
j, type]\\n        J[v, idx+2] = 0\\n        J[v, idx+3] = 0\\n    end\\n    \
if funcidx==3\\n        J[v, idx+0] = 0\\n        J[v, idx+1] = 0\\n        \
J[v, idx+2] = Mx[1, 1 + ordx, i]*My[1, 1 + ordy, j, type]\\n        J[v, \
idx+3] = 0\\n    end\\n    if funcidx==4\\n        J[v, idx+0] = 0\\n        \
J[v, idx+1] = 0\\n        J[v, idx+2] = 0\\n        J[v, idx+3] = Mx[2, 1 + \
ordx, i]*My[1, 1 + ordy, j, type]\\n    end\\nend\\n\\n#DEFINE THE FIELD \
EQUATIONS\\nfunction \
Field_Eqs_Jac!(i::Int64,j::Int64,f::Float64,dfdx::Float64,d2fdx2::Float64,\
dfdy::Float64,d2fdy2::Float64,d2fdxdy::Float64,g::Float64,dgdx::Float64,\
d2gdx2::Float64,dgdy::Float64,d2gdy2::Float64,d2gdxdy::Float64,h::Float64,\
dhdx::Float64,d2hdx2::Float64,dhdy::Float64,d2hdy2::Float64,d2hdxdy::Float64,\
W::Float64,dWdx::Float64,d2Wdx2::Float64,dWdy::Float64,d2Wdy2::Float64,\
d2Wdxdy::Float64,haxis::Float64,siny::Float64,cosy::Float64,J::Matrix{Float64}\
,idx::Int64,WBC::Float64,rh::Float64,v::Int64,funcidx::Int64,type::Int8,ordx::\
Int64,ordy::Int64,x::Float64,y::Float64,Mx::Array{Float64, \
3}=Mx,My::Array{Float64, 4}=My)\\n    if funcidx==1\\n        J[v, idx+0] = \
-((-1 + x)^4*(1 + x)^2*f*g*Mx[3, 1 + ordx, i]*My[1, 1 + ordy, j, type]) - (-1 \
+ x)^2*(1 + x)^2*f*g*Mx[1, 1 + ordx, i]*My[3, 1 + ordy, j, type] - (-1 + \
x)^4*Mx[1, 1 + ordx, i]*My[2, 1 + ordy, j, type]*(((1 + x)*g*((1 + \
x)*cosy/siny*f - 2*(1 + x)*dfdy))/(-1 + x)^2 + ((1 + x)^2*f*dgdy)/(2*(-1 + \
x)^2)) - (-1 + x)^4*Mx[2, 1 + ordx, i]*My[1, 1 + ordy, j, type]*(((1 + \
x)*g*((-1 + x)^2*f - 2*(-1 + x)^2*(1 + x)*dfdx))/(-1 + x)^2 + ((1 + \
x)^2*f*dgdx)/2) - (-1 + x)^4*Mx[1, 1 + ordx, i]*My[1, 1 + ordy, j, type]*((1 \
+ x)*f*dgdx + ((1 + x)*((1 + x)*dfdy*dgdy + (-1 + x)^2*(2*f + (1 + \
x)*dfdx)*dgdx))/(2*(-1 + x)^2) + ((1 + x)*g*((1 + x)*cosy/siny*dfdy + (1 + \
x)*d2fdy2 + (-1 + x)^2*(dfdx + (1 + x)*d2fdx2)))/(-1 + x)^2)\\n\\n        \
J[v, idx+1] = 4*(-1 + x)^2*(1 + x)*g*Mx[1, 1 + ordx, i]*My[2, 1 + ordy, j, \
type]*siny*dWdy + 4*(-1 + x)^3*(1 + x)*g*Mx[2, 1 + ordx, i]*My[1, 1 + ordy, \
j, type]*siny*(2*W + (-1 + x)*dWdx) - (-1 + x)^2*Mx[1, 1 + ordx, i]*My[1, 1 + \
ordy, j, type]*(3*(1 + x)*siny*(dgdy*dWdy + (-1 + x)*dgdx*(2*W + (-1 + \
x)*dWdx)) + 2*g*(-4*x*siny*W + 3*(1 + x)*cosy*dWdy + siny*((1 + x)*d2Wdy2 + \
(-1 + x)*((3 + x)*dWdx + (-1 + x^2)*d2Wdx2))))\\n\\n        J[v, idx+2] = (-1 \
+ x)^2*Mx[1, 1 + ordx, i]*My[1, 1 + ordy, j, type]*(-4*(-1 + x)*g^2 - (1 + \
x)*(dgdy^2 + (-1 + x)^2*dgdx^2) + 2*g*(2*(1 + x)*cosy/siny*dgdy + (1 + \
x)*d2gdy2 + (-1 + x)*((-3 + x)*dgdx + (-1 + x^2)*d2gdx2)))\\n\\n        if \
j==2\\n            J[v, idx+3] = 0\\n        else\\n            J[v, idx+3] = \
2*(-1 + x)^2*(1 + x)^2*g^2*h^2*Mx[1, 1 + ordx, i]*My[2, 1 + ordy, j, \
type]*dfdy + (-1 + x)^2*(1 + x)*g^2*Mx[2, 1 + ordx, i]*My[1, 1 + ordy, j, \
type]*(4*(-1 + x)^2*f*h^2 + 2*(-1 + x)^2*(1 + x)*h^2*dfdx) - (-1 + x)^2*Mx[1, \
1 + ordx, i]*My[1, 1 + ordy, j, type]*(8*(1 + x)*f*g*h^2*((1 + \
x)*cosy/siny*dgdy - 2*(-1 + x)*dgdx) + 2*(1 + x)^2*f*h^2*(dgdy^2 + (-1 + \
x)^2*dgdx^2) - (1 + x)*g^2*(4*(-1 + x)^2*h^2*dfdx + 4*f*(4*(-1 + x)*h^2 - (1 \
+ x)*(dhdy^2 + (-1 + x)^2*dhdx^2) + (1 + x)*h*(d2hdy2 + (-1 + x)*(dhdx + (-1 \
+ x)*d2hdx2)))))\\n\\n        end\\n    end\\n    if funcidx==2\\n        \
J[v, idx+0] = -1/2*((-1 + x)^2*(1 + x)^2*f*Mx[1, 1 + ordx, i]*My[2, 1 + ordy, \
j, type]*dfdy) - ((-1 + x)^4*(1 + x)*f*Mx[2, 1 + ordx, i]*My[1, 1 + ordy, j, \
type]*(2*f + (1 + x)*dfdx))/2 - (-1 + x)^4*Mx[1, 1 + ordx, i]*My[1, 1 + ordy, \
j, type]*(-2*g*siny^2*(4*W^2 + dWdy^2 + 4*(-1 + x)*W*dWdx + (-1 + \
x)^2*dWdx^2) + ((1 + x)*(-((1 + x)*(dfdy^2 + (-1 + x)^2*dfdx^2)) + f*((1 + \
x)*cosy/siny*dfdy + (1 + x)*d2fdy2 + (-1 + x)^2*(dfdx + (1 + \
x)*d2fdx2))))/(-1 + x)^2)\\n\\n        J[v, idx+1] = -3*(-1 + x)^2*(1 + \
x)*f*Mx[1, 1 + ordx, i]*My[2, 1 + ordy, j, type]*siny*dWdy - 3*(-1 + x)^3*(1 \
+ x)*f*Mx[2, 1 + ordx, i]*My[1, 1 + ordy, j, type]*siny*(2*W + (-1 + x)*dWdx) \
- (-1 + x)^2*Mx[1, 1 + ordx, i]*My[1, 1 + ordy, j, type]*(-4*(1 + \
x)*siny*(dfdy*dWdy + (-1 + x)*dfdx*(2*W + (-1 + x)*dWdx)) + 2*f*(-4*x*siny*W \
+ 3*(1 + x)*cosy*dWdy + siny*((1 + x)*d2Wdy2 + (-1 + x)*((3 + x)*dWdx + (-1 + \
x^2)*d2Wdx2))))\\n\\n        J[v, idx+2] = 2*(-1 + x)^3*(-1 + x^2)*f*g*Mx[3, \
1 + ordx, i]*My[1, 1 + ordy, j, type] + 2*(-1 + x)^2*(1 + x)*f*g*Mx[1, 1 + \
ordx, i]*My[3, 1 + ordy, j, type] + (-1 + x)^2*f*Mx[1, 1 + ordx, i]*My[2, 1 + \
ordy, j, type]*(4*(1 + x)*cosy/siny*g - 2*(1 + x)*dgdy) + (-1 + x)^2*f*Mx[2, \
1 + ordx, i]*My[1, 1 + ordy, j, type]*(2*(-3 + x)*(-1 + x)*g - 2*(-1 + \
x)^2*(1 + x)*dgdx) + (-1 + x)^2*f*Mx[1, 1 + ordx, i]*My[1, 1 + ordy, j, \
type]*(-8*(-1 + x)*g + 2*(2*(1 + x)*cosy/siny*dgdy + (1 + x)*d2gdy2 + (-1 + \
x)*((-3 + x)*dgdx + (-1 + x^2)*d2gdx2)))\\n\\n        if j==2\\n            \
J[v, idx+3] = 0\\n        else\\n            J[v, idx+3] = -((-1 + x)^2*Mx[1, \
1 + ordx, i]*My[2, 1 + ordy, j, type]*(4*(1 + x)^2*cosy/siny*f^2*g*h^2 + 2*(1 \
+ x)^2*f^2*h^2*dgdy)) - (-1 + x)^2*Mx[2, 1 + ordx, i]*My[1, 1 + ordy, j, \
type]*(-8*(-1 + x)*(1 + x)*f^2*g*h^2 + 2*(-1 + x)^2*(1 + x)^2*f^2*h^2*dgdx) - \
(-1 + x)^2*Mx[1, 1 + ordx, i]*My[1, 1 + ordy, j, type]*(4*(1 + x)*f^2*h^2*((1 \
+ x)*cosy/siny*dgdy - 2*(-1 + x)*dgdx) + 9*(-1 + x)^2*g^2*h^2*siny^2*(4*W^2 + \
dWdy^2 + 4*(-1 + x)*W*dWdx + (-1 + x)^2*dWdx^2) - 2*(1 + x)*g*(4*(-1 + \
x)^2*f*h^2*dfdx + (1 + x)*h^2*(dfdy^2 + (-1 + x)^2*dfdx^2) + 2*f^2*(4*(-1 + \
x)*h^2 - (1 + x)*(dhdy^2 + (-1 + x)^2*dhdx^2) + (1 + x)*h*(d2hdy2 + (-1 + \
x)*(dhdx + (-1 + x)*d2hdx2)))))\\n\\n        end\\n    end\\n    if \
funcidx==3\\n        J[v, idx+0] = 0\\n\\n        J[v, idx+1] = 0\\n\\n       \
 J[v, idx+2] = 0\\n\\n        if j==2\\n            J[v, idx+3] = Mx[1, 1 + \
ordx, i]*My[1, 1 + ordy, 1, 1]\\n        else\\n            J[v, idx+3] = \
2*(-1 + x)^4*(1 + x)^2*f^2*g^2*h*Mx[3, 1 + ordx, i]*My[1, 1 + ordy, j, type] \
+ 2*(-1 + x)^2*(1 + x)^2*f^2*g^2*h*Mx[1, 1 + ordx, i]*My[3, 1 + ordy, j, \
type] - 4*(-1 + x)^2*(1 + x)^2*f^2*g^2*Mx[1, 1 + ordx, i]*My[2, 1 + ordy, j, \
type]*dhdy + 2*(-1 + x)^2*(1 + x)*f^2*g^2*Mx[2, 1 + ordx, i]*My[1, 1 + ordy, \
j, type]*((-1 + x)*(1 + x)*h - 2*(-1 + x)^2*(1 + x)*dhdx) - (-1 + x)^2*Mx[1, \
1 + ordx, i]*My[1, 1 + ordy, j, type]*(8*(1 + x)*f^2*g*h*((1 + \
x)*cosy/siny*dgdy - 2*(-1 + x)*dgdx) + 2*(1 + x)^2*f^2*h*(dgdy^2 + (-1 + \
x)^2*dgdx^2) + 6*(-1 + x)^2*g^3*h*siny^2*(4*W^2 + dWdy^2 + 4*(-1 + x)*W*dWdx \
+ (-1 + x)^2*dWdx^2) - (1 + x)*g^2*(8*(-1 + x)^2*f*h*dfdx + 2*(1 + \
x)*h*(dfdy^2 + (-1 + x)^2*dfdx^2) + 2*f^2*(8*(-1 + x)*h + (1 + x)*(d2hdy2 + \
(-1 + x)*(dhdx + (-1 + x)*d2hdx2)))))\\n\\n        end\\n    end\\n    if \
funcidx==4\\n        J[v, idx+0] = 2*(-1 + x)^4*g^2*Mx[1, 1 + ordx, i]*My[2, \
1 + ordy, j, type]*siny^2*dWdy + (-1 + x)^4*g^2*Mx[1, 1 + ordx, i]*My[1, 1 + \
ordy, j, type]*siny^2*(8*W + 4*(-1 + x)*dWdx) + (-1 + x)^4*g^2*Mx[2, 1 + \
ordx, i]*My[1, 1 + ordy, j, type]*siny^2*(4*(-1 + x)*W + 2*(-1 + \
x)^2*dWdx)\\n\\n        J[v, idx+1] = -2*(-1 + x)^3*(-1 + x^2)*f*g*Mx[3, 1 + \
ordx, i]*My[1, 1 + ordy, j, type]*siny - 2*(-1 + x)^2*(1 + x)*f*g*Mx[1, 1 + \
ordx, i]*My[3, 1 + ordy, j, type]*siny - (-1 + x)^2*Mx[1, 1 + ordx, i]*My[2, \
1 + ordy, j, type]*(-4*(1 + x)*g*siny*dfdy + f*(6*(1 + x)*cosy*g + 3*(1 + \
x)*siny*dgdy)) - (-1 + x)^2*Mx[1, 1 + ordx, i]*My[1, 1 + ordy, j, \
type]*(-8*(-1 + x)*(1 + x)*g*siny*dfdx + f*(-8*x*g*siny + 6*(-1 + x)*(1 + \
x)*siny*dgdx)) - (-1 + x)^2*Mx[2, 1 + ordx, i]*My[1, 1 + ordy, j, \
type]*(-4*(-1 + x)^2*(1 + x)*g*siny*dfdx + f*(2*(-1 + x)*(3 + x)*g*siny + \
3*(-1 + x)^2*(1 + x)*siny*dgdx))\\n\\n        J[v, idx+2] = 0\\n\\n        if \
j==2\\n            J[v, idx+3] = 0\\n        else\\n            J[v, idx+3] = \
-6*(-1 + x)^4*g^3*h^2*Mx[1, 1 + ordx, i]*My[2, 1 + ordy, j, type]*siny^2*dWdy \
- 3*(-1 + x)^4*g^3*h^2*Mx[1, 1 + ordx, i]*My[1, 1 + ordy, j, \
type]*siny^2*(8*W + 4*(-1 + x)*dWdx) - 3*(-1 + x)^4*g^3*h^2*Mx[2, 1 + ordx, \
i]*My[1, 1 + ordy, j, type]*siny^2*(4*(-1 + x)*W + 2*(-1 + x)^2*dWdx)\\n\\n   \
     end\\n    end\\nend\\n#DEFINE THE WHOLE SYSTEM (BCs+FIELD EQS) ON OUR \
GRID\\nfunction \
residual_jac!(R::Matrix{Float64},J::Matrix{Float64},a::Matrix{Float64},f::\
Field,g::Field,h::Field,W::Field,WBC::Float64,rh::Float64,spin::Bool,x::\
Vector{Float64}=X,y::Vector{Float64}=Y)\\n\\n    f.a=a[0*Nx+1:1*Nx,:]\\n\\n   \
 g.a=a[1*Nx+1:2*Nx,:]\\n\\n    h.a=a[2*Nx+1:3*Nx,:]\\n\\n    \
W.a=a[3*Nx+1:4*Nx,:]\\n\\n    type=[f.type,g.type,h.type,W.type]\\n    \
ff=Matrix{Float64}(undef,Nx,Ny); dfdx=Matrix{Float64}(undef,Nx,Ny); \
d2fdx2=Matrix{Float64}(undef,Nx,Ny); dfdy=Matrix{Float64}(undef,Nx,Ny); \
d2fdy2=Matrix{Float64}(undef,Nx,Ny); d2fdxdy=Matrix{Float64}(undef,Nx,Ny);\\n \
   gg=Matrix{Float64}(undef,Nx,Ny); dgdx=Matrix{Float64}(undef,Nx,Ny); \
d2gdx2=Matrix{Float64}(undef,Nx,Ny); dgdy=Matrix{Float64}(undef,Nx,Ny); \
d2gdy2=Matrix{Float64}(undef,Nx,Ny); d2gdxdy=Matrix{Float64}(undef,Nx,Ny);\\n \
   hh=Matrix{Float64}(undef,Nx,Ny); dhdx=Matrix{Float64}(undef,Nx,Ny); \
d2hdx2=Matrix{Float64}(undef,Nx,Ny); dhdy=Matrix{Float64}(undef,Nx,Ny); \
d2hdy2=Matrix{Float64}(undef,Nx,Ny); d2hdxdy=Matrix{Float64}(undef,Nx,Ny);\\n \
   WW=Matrix{Float64}(undef,Nx,Ny); dWdx=Matrix{Float64}(undef,Nx,Ny); \
d2Wdx2=Matrix{Float64}(undef,Nx,Ny); dWdy=Matrix{Float64}(undef,Nx,Ny); \
d2Wdy2=Matrix{Float64}(undef,Nx,Ny); d2Wdxdy=Matrix{Float64}(undef,Nx,Ny);\\n \
   haxis=Array{Float64}(undef,Nx);\\n\\n    for i in 1:Nx\\n        for j in \
1:Ny\\n            ff[i,j]=f(i,j+1)\\n            dfdx[i,j]=f(i,j+1,dx=1)\\n  \
          d2fdx2[i,j]=f(i,j+1,dx=2)\\n            dfdy[i,j]=f(i,j+1,dy=1)\\n  \
          d2fdy2[i,j]=f(i,j+1,dy=2)\\n            \
d2fdxdy[i,j]=f(i,j+1,dx=1,dy=1)\\n            gg[i,j]=g(i,j+1)\\n            \
dgdx[i,j]=g(i,j+1,dx=1)\\n            d2gdx2[i,j]=g(i,j+1,dx=2)\\n            \
dgdy[i,j]=g(i,j+1,dy=1)\\n            d2gdy2[i,j]=g(i,j+1,dy=2)\\n            \
d2gdxdy[i,j]=g(i,j+1,dx=1,dy=1)\\n            hh[i,j]=h(i,j+1)\\n            \
dhdx[i,j]=h(i,j+1,dx=1)\\n            d2hdx2[i,j]=h(i,j+1,dx=2)\\n            \
dhdy[i,j]=h(i,j+1,dy=1)\\n            d2hdy2[i,j]=h(i,j+1,dy=2)\\n            \
d2hdxdy[i,j]=h(i,j+1,dx=1,dy=1)\\n            WW[i,j]=W(i,j+1)\\n            \
dWdx[i,j]=W(i,j+1,dx=1)\\n            d2Wdx2[i,j]=W(i,j+1,dx=2)\\n            \
dWdy[i,j]=W(i,j+1,dy=1)\\n            d2Wdy2[i,j]=W(i,j+1,dy=2)\\n            \
d2Wdxdy[i,j]=W(i,j+1,dx=1,dy=1)\\n        end\\n        haxis[i]=h(i,1)\\n    \
end\\n\\n    siny=Array{Float64}(undef,Ny);\\n    \
cosy=Array{Float64}(undef,Ny);\\n    for j in 1:Ny\\n        \
siny[j]=sin(y[j+1])\\n        cosy[j]=cos(y[j+1])\\n    end\\n\\n    if !(R \
== nothing)\\n        #INDEX FOR THE RESIDUAL R\\n        idx=1\\n        \
#LOOP ON ALL X POINTS INCLUDING -1 AND 1\\n        for i in 1:Nx\\n        \
#LOOP ON INTERNAL Y POINTS. NOTE THAT BC ON 0 AND PI/2 ARE AUTOMATICALLY \
IMPOSED BY OUR CHOICE OF BASIS FUNCTIONS (EVEN COSINES)\\n            for j \
in 1:Ny\\n                if i==1\\n                    #DEFINE BCS AT THE \
HORIZON\\n                    if !spin\\n                        \
BC_Horizon!(i,j,ff[i,j],dfdx[i,j],d2fdx2[i,j],dfdy[i,j],d2fdy2[i,j],d2fdxdy[i,\
j],gg[i,j],dgdx[i,j],d2gdx2[i,j],dgdy[i,j],d2gdy2[i,j],d2gdxdy[i,j],hh[i,j],\
dhdx[i,j],d2hdx2[i,j],dhdy[i,j],d2hdy2[i,j],d2hdxdy[i,j],WW[i,j],dWdx[i,j],\
d2Wdx2[i,j],dWdy[i,j],d2Wdy2[i,j],d2Wdxdy[i,j],R,idx,WBC,rh)\\n               \
     else\\n                        \
BC_Horizon_Spin!(i,j,ff[i,j],dfdx[i,j],d2fdx2[i,j],dfdy[i,j],d2fdy2[i,j],\
d2fdxdy[i,j],gg[i,j],dgdx[i,j],d2gdx2[i,j],dgdy[i,j],d2gdy2[i,j],d2gdxdy[i,j],\
hh[i,j],dhdx[i,j],d2hdx2[i,j],dhdy[i,j],d2hdy2[i,j],d2hdxdy[i,j],WW[i,j],dWdx[\
i,j],d2Wdx2[i,j],dWdy[i,j],d2Wdy2[i,j],d2Wdxdy[i,j],R,idx,WBC,rh)\\n          \
          end\\n                elseif i==Nx\\n                    #DEFINE \
BCS AT INFINITY\\n                    if !spin\\n                        \
BC_Infinity!(i,j,ff[i,j],dfdx[i,j],d2fdx2[i,j],dfdy[i,j],d2fdy2[i,j],d2fdxdy[\
i,j],gg[i,j],dgdx[i,j],d2gdx2[i,j],dgdy[i,j],d2gdy2[i,j],d2gdxdy[i,j],hh[i,j],\
dhdx[i,j],d2hdx2[i,j],dhdy[i,j],d2hdy2[i,j],d2hdxdy[i,j],WW[i,j],dWdx[i,j],\
d2Wdx2[i,j],dWdy[i,j],d2Wdy2[i,j],d2Wdxdy[i,j],R,idx,WBC,rh)\\n               \
     else\\n                        \
BC_Infinity_Spin!(i,j,ff[i,j],dfdx[i,j],d2fdx2[i,j],dfdy[i,j],d2fdy2[i,j],\
d2fdxdy[i,j],gg[i,j],dgdx[i,j],d2gdx2[i,j],dgdy[i,j],d2gdy2[i,j],d2gdxdy[i,j],\
hh[i,j],dhdx[i,j],d2hdx2[i,j],dhdy[i,j],d2hdy2[i,j],d2hdxdy[i,j],WW[i,j],dWdx[\
i,j],d2Wdx2[i,j],dWdy[i,j],d2Wdy2[i,j],d2Wdxdy[i,j],R,idx,WBC,rh)\\n          \
          end\\n                else\\n                    #DEFINE FIELD \
EQUATIONS EVERYWHERE ELSE ON THE GRID\\n                    \
Field_Eqs!(i,j+1,ff[i,j],dfdx[i,j],d2fdx2[i,j],dfdy[i,j],d2fdy2[i,j],d2fdxdy[\
i,j],gg[i,j],dgdx[i,j],d2gdx2[i,j],dgdy[i,j],d2gdy2[i,j],d2gdxdy[i,j],hh[i,j],\
dhdx[i,j],d2hdx2[i,j],dhdy[i,j],d2hdy2[i,j],d2hdxdy[i,j],WW[i,j],dWdx[i,j],\
d2Wdx2[i,j],dWdy[i,j],d2Wdy2[i,j],d2Wdxdy[i,j],haxis[i],siny[j],cosy[j],R,idx,\
WBC,rh,X[i],Y[j])\\n                end\\n                idx+=NFields\\n     \
       end\\n        end\\n    end\\n\\n    if !(J == nothing)\\n        \
funcidx=1\\n        ordx=0\\n        ordy=0\\n        for v in \
1:Nx*Ny*NFields\\n            #INDEX FOR THE JACOBIAN J COLUMNS\\n            \
idx=1\\n            #LOOP ON ALL X POINTS INCLUDING -1 AND 1\\n            \
for i in 1:Nx\\n            #LOOP ON INTERNAL Y POINTS. NOTE THAT BC ON 0 AND \
PI/2 ARE AUTOMATICALLY IMPOSED BY OUR CHOICE OF BASIS FUNCTIONS (EVEN \
COSINES)\\n                for j in 1:Ny\\n                    if i==1\\n     \
                   #DEFINE BCS AT THE HORIZON\\n                        if \
!spin\\n                            \
BC_Horizon_Jac!(i,j+1,ff[i,j],dfdx[i,j],d2fdx2[i,j],dfdy[i,j],d2fdy2[i,j],\
d2fdxdy[i,j],gg[i,j],dgdx[i,j],d2gdx2[i,j],dgdy[i,j],d2gdy2[i,j],d2gdxdy[i,j],\
hh[i,j],dhdx[i,j],d2hdx2[i,j],dhdy[i,j],d2hdy2[i,j],d2hdxdy[i,j],WW[i,j],dWdx[\
i,j],d2Wdx2[i,j],dWdy[i,j],d2Wdy2[i,j],d2Wdxdy[i,j],J,idx,WBC,rh,v,funcidx,\
type[funcidx],ordx,ordy)\\n                        else\\n                    \
        BC_Horizon_Jac_Spin!(i,j+1,ff[i,j],dfdx[i,j],d2fdx2[i,j],dfdy[i,j],\
d2fdy2[i,j],d2fdxdy[i,j],gg[i,j],dgdx[i,j],d2gdx2[i,j],dgdy[i,j],d2gdy2[i,j],\
d2gdxdy[i,j],hh[i,j],dhdx[i,j],d2hdx2[i,j],dhdy[i,j],d2hdy2[i,j],d2hdxdy[i,j],\
WW[i,j],dWdx[i,j],d2Wdx2[i,j],dWdy[i,j],d2Wdy2[i,j],d2Wdxdy[i,j],J,idx,WBC,rh,\
v,funcidx,type[funcidx],ordx,ordy)\\n                        end\\n           \
         elseif i==Nx\\n                        #DEFINE BCS AT INFINITY\\n    \
                    if !spin\\n                            \
BC_Infinity_Jac!(i,j+1,ff[i,j],dfdx[i,j],d2fdx2[i,j],dfdy[i,j],d2fdy2[i,j],\
d2fdxdy[i,j],gg[i,j],dgdx[i,j],d2gdx2[i,j],dgdy[i,j],d2gdy2[i,j],d2gdxdy[i,j],\
hh[i,j],dhdx[i,j],d2hdx2[i,j],dhdy[i,j],d2hdy2[i,j],d2hdxdy[i,j],WW[i,j],dWdx[\
i,j],d2Wdx2[i,j],dWdy[i,j],d2Wdy2[i,j],d2Wdxdy[i,j],J,idx,WBC,rh,v,funcidx,\
type[funcidx],ordx,ordy)\\n                        else\\n                    \
        BC_Infinity_Jac_Spin!(i,j+1,ff[i,j],dfdx[i,j],d2fdx2[i,j],dfdy[i,j],\
d2fdy2[i,j],d2fdxdy[i,j],gg[i,j],dgdx[i,j],d2gdx2[i,j],dgdy[i,j],d2gdy2[i,j],\
d2gdxdy[i,j],hh[i,j],dhdx[i,j],d2hdx2[i,j],dhdy[i,j],d2hdy2[i,j],d2hdxdy[i,j],\
WW[i,j],dWdx[i,j],d2Wdx2[i,j],dWdy[i,j],d2Wdy2[i,j],d2Wdxdy[i,j],J,idx,WBC,rh,\
v,funcidx,type[funcidx],ordx,ordy)\\n                        end\\n           \
         else\\n                        #DEFINE FIELD EQUATIONS EVERYWHERE \
ELSE ON THE GRID\\n                        \
Field_Eqs_Jac!(i,j+1,ff[i,j],dfdx[i,j],d2fdx2[i,j],dfdy[i,j],d2fdy2[i,j],\
d2fdxdy[i,j],gg[i,j],dgdx[i,j],d2gdx2[i,j],dgdy[i,j],d2gdy2[i,j],d2gdxdy[i,j],\
hh[i,j],dhdx[i,j],d2hdx2[i,j],dhdy[i,j],d2hdy2[i,j],d2hdxdy[i,j],WW[i,j],dWdx[\
i,j],d2Wdx2[i,j],dWdy[i,j],d2Wdy2[i,j],d2Wdxdy[i,j],haxis[i],siny[j],cosy[j],\
J,idx,WBC,rh,v,funcidx,type[funcidx],ordx,ordy,X[i],Y[j])\\n                  \
  end\\n                    idx+=NFields\\n                end\\n            \
end\\n            ordx+=1\\n            if mod(v,Nx)==0\\n                \
funcidx+=1\\n                ordx=0\\n            end\\n            if \
mod(v,Nx*NFields)==0\\n                funcidx=1\\n                ordx=0\\n  \
              ordy+=1\\n            end\\n        end\\n        J .= \
transpose(J)\\n    end\\nend\\n\\n#SOLVE THE NON-LINEAR SYSTEM TO OBTAIN THE \
SOLUTIONS\\nfunction \
solve_system(f::Field,g::Field,h::Field,W::Field,tol::Float64,WBC::Float64,rh:\
:Float64,spin::Bool=false,show_trace::Bool=true,iterations::Int64=30,method = \
:newton)\\n    return \
nlsolve(only_fj!((R,J,a)->residual_jac!(R,J,a,f,g,h,W,WBC,rh,spin)), \
vcat(f.a,g.a,h.a,W.a), ftol=0.0,xtol=tol, show_trace=show_trace, iterations = \
iterations, method = method)\\nend\\nnothing\"\>"], "Print",
 CellChangeTimes->{{3.879321052542883*^9, 3.879321070321724*^9}},
 CellLabel->
  "During evaluation of \
In[15]:=",ExpressionUUID->"16502b99-11b9-4a10-ab51-0b25f4f59cbc"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local 3",
WindowSize->{1440, 847},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"cce71582-cfc0-4d50-80f9-b855016f8280"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 161, 3, 98, "Title",ExpressionUUID->"57c55c77-4595-43b0-ad86-3464955c1732"],
Cell[CellGroupData[{
Cell[766, 29, 191, 3, 67, "Section",ExpressionUUID->"757d2ab6-5efb-4cd7-b0ae-36103cd99711"],
Cell[960, 34, 185361, 4037, 15762, "Input",ExpressionUUID->"0ec6db90-50be-442a-a909-e48d3fe5ccaa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[186370, 4077, 293, 5, 98, "Title",ExpressionUUID->"c4723dc7-a631-45e6-9642-7660fa604c27"],
Cell[CellGroupData[{
Cell[186688, 4086, 324, 5, 30, "Input",ExpressionUUID->"15e7f837-326a-461e-a643-3ca8f88da489"],
Cell[187015, 4093, 248, 3, 34, "Output",ExpressionUUID->"2d2f8548-0f04-4470-916f-39c3626988c9"]
}, Open  ]],
Cell[187278, 4099, 526, 10, 30, "Input",ExpressionUUID->"e4969b2e-7ee4-4667-ad5e-2def94f57dc2"],
Cell[187807, 4111, 1970, 61, 54, "Input",ExpressionUUID->"e3c025e9-cd54-472e-a780-57b01de12a1d"],
Cell[189780, 4174, 2607, 87, 57, "Input",ExpressionUUID->"129f3a0f-8a96-4f86-a1b1-84556fa1340c"],
Cell[CellGroupData[{
Cell[192412, 4265, 1211, 23, 30, "Input",ExpressionUUID->"31de42eb-ca66-4a62-b6c3-4eebac0995b2"],
Cell[193626, 4290, 26888, 362, 8613, "Print",ExpressionUUID->"16502b99-11b9-4a10-ab51-0b25f4f59cbc"]
}, Open  ]]
}, Open  ]]
}
]
*)

